<workflow id="APP_CHECK_PLEDGE" name="Проверка достаточности обеспечения">
    <event name="onCandidates">
        <![CDATA[def depIn(dep):
    from colvir_cbs.services import bank
    return po['app']['depCode'] in bank.getDepartmentsCodes(dep)
]]>
    </event>
    <event name="onGetProcessObject">
        <![CDATA[ok = process_vars.get('objectKey')
kv = ok.split(':')
pk = kv[1].split(',')

token._po = execObjectMethod({
    'object': 'app', 'method': 'getApplication',
    'params': {
        'dep_id': int(pk[0]),
        'id'    : int(pk[1]),
    }
})

]]>
    </event>
    <script id="60999b6b-7f9d-4c7a-9d91-51f9f4f89895" name="Инициализация">
        <![CDATA[ok = process_vars.get('objectKey')


# Из объекта получаем идентификаторы заявки    
kv = ok.split(':')
pk = kv[1].split(',')
pv['dep_id'] = int(pk[0])
pv['id'] = int(pk[1])

]]>
    </script>
    <timer id="92f1dd09-a977-4b20-bab5-ea877f8b5a2d" name="Контроль обеспечения" description="Контроль обеспечения, заявка {{po.app.code}}, {{po.client.name}}" duration="00:00:00" errorDuration="00:01:00" action="continue"/>
    <script id="b9b11443-1aba-4854-803a-ebe31ababa2d" name="Определение вида контроля">
        <![CDATA[#
# Контроль для связанных лиц
#
process_vars['checkRelatedPerson'] = po['client'].get('isRelatedPerson') == True

#
# Контроль по настройке обязательности обеспечения
# Таблица рещений L_DEAENSLIST
#
process_vars['checkRequiredPledges'] = (
    po['product'].get('constraints') is not None and 
    po['product']['constraints'].get('requiredPledges') is not None and
    len(po['product']['constraints']['requiredPledges'])>0
)
]]>
    </script>
    <split id="7d50bb86-2064-4e5b-8b3f-20e661498415" name="Способ проверки">
        <condition id="804a80c0-afec-4d44-bfaa-020ee7dec83a" name="Связанные лица" expression="process_vars[&apos;checkRelatedPerson&apos;]">
            <script id="ed704c5c-0d10-4d19-8521-01ee19beaee4" name="Контроль обеспечения">
                <journal time="leave">
                    <![CDATA[{{process_vars.result.text}}]]>
                </journal>
                <![CDATA[s = execObjectMethod({'object': 'settings', 'method': 'get'})

pv['result'] = execObjectMethod({
    **s['loanapp']['checkPledge']['relatedPerson'],
    'params': {
        'dep_id': pv['dep_id'],
        'id': pv['id']
    }
})

]]>
            </script>
            <split id="e84cc964-7495-4504-9d2d-496a90363d00" name="Обеспечения достаточно">
                <condition id="e1f7c4ba-6a7b-491c-a60f-24ccaa078af4" name="Да" expression="process_vars[&apos;result&apos;][&apos;status&apos;] == &apos;accept&apos;"/>
                <condition id="f8b62ace-5162-401d-af5a-acf82fccde9e" name="Нет" expression="pv[&apos;result&apos;][&apos;status&apos;] == &apos;decline&apos; and po.get(&apos;government&apos;, {}).get(&apos;hasDecision&apos;, False) == False">
                    <task id="3ddae5f9-a179-43bd-aabf-3059c7b9292e" name="Информирование о недостаточности обеспечения" autoStart="true" description="Не достаточно обеспечения, заявка {{po.app.code}}, {{po.client.name}}">
                        <clientTask path="/aoa/ObjectTask" taskName="{{task.description}}">
                            <p name="caption" expression="task[&apos;description&apos;]"/>
                            <p name="message" expression="process_vars[&apos;result&apos;][&apos;text&apos;]"/>
                            <p name="actionVar" expression="&apos;action&apos;"/>
                            <p name="actions" expression="[  { &apos;name&apos;: &apos;В доработку&apos;, &apos;value&apos;: &apos;review&apos; } , { &apos;name&apos;: &apos;Отказать&apos;, &apos;value&apos;: &apos;decline&apos; }  ]"/>
                            <p name="object" expression="&apos;easyflow&apos;"/>
                            <p name="form" expression="&apos;processDialogTask&apos;"/>
                        </clientTask>
                    </task>
                    <split id="598b09d1-9f3c-4056-8e78-c948de58daa7" name="Выбор пользователя">
                        <condition id="2cd90fca-fc95-444c-b5f4-c0846e3a8943" name="В доработку" expression="process_vars[&apos;action&apos;] == &apos;review&apos;">
                            <script id="90e25ffd-0da5-4754-8c6d-568b4d6f92ca" name="Установка результата: в доработку">
                                <![CDATA[process_vars['result']['status'] = 'review']]>
                            </script>
                        </condition>
                        <condition id="886b816c-c172-43ee-8157-dbc269ff40a0" name="Отказать" expression="process_vars[&apos;action&apos;] == &apos;decline&apos;">
                            <script id="48e33299-2fa0-4b56-8f6e-6c3291292224" name="Установка результата: отказать">
                                <![CDATA[process_vars['result']['status'] = 'decline']]>
                            </script>
                        </condition>
                    </split>
                </condition>
                <condition id="6232718d-e5be-404f-bc10-8c62a17900ae" name="Нет, но пропускаем" expression="pv[&apos;result&apos;][&apos;status&apos;] == &apos;decline&apos; and po[&apos;government&apos;][&apos;hasDecision&apos;] == True">
                    <script id="425a88bf-e89a-4743-8604-bd144e243668" name="Обработка исключения">
                        <journal time="leave">
                            <![CDATA[Допускается нарушение условий для кредитов по решению Правительства]]>
                        </journal>
                        <![CDATA[process_vars['result'] = {
    'status': 'accept'
}
]]>
                    </script>
                </condition>
            </split>
        </condition>
        <condition id="b36f483c-87b0-47e6-89d0-d1fc73e67930" name="Обязательное обеспечение" expression="process_vars[&apos;checkRelatedPerson&apos;] == False and process_vars[&apos;checkRequiredPledges&apos;] == True">
            <script id="6e955cf8-62ec-450b-b844-c461bcec2f08" name="Проверка обязательности обеспечения">
                <![CDATA[

matched = False
for rp in po['product']['constraints']['requiredPledges']:
    
    def isPledgeMatched(pledges, required):
        if not required or not required['type']:
            return True
        requiredTypes = required['type'].split(',')
        availabeTypes = [x['JSON']['ens_code'] for x in pledges]
        
        for r in requiredTypes:
            f = filter(lambda x: x==r, availabeTypes)
            if next(f, None) is None:
                return False
                
        return True
        

    matched = isPledgeMatched(po['pledges'], rp)
    
    if matched:
        break
    

process_vars['pledgesMatched'] = matched]]>
            </script>
            <split id="71226518-8984-4976-a987-6f84ec8d7310" name="Результат проверки обязательности обеспечения">
                <condition id="d9fb46f0-39aa-4a3b-b670-344dd4216a37" name="Обеспечение соответсвует" expression="process_vars[&apos;pledgesMatched&apos;] == True">
                    <script id="252ad38e-81b1-4773-a18a-640a27f8cec4" name="Установка результата">
                        <journal time="leave">
                            <![CDATA[Обязательность обеспечения соответствует]]>
                        </journal>
                        <![CDATA[process_vars['result'] = {
    'status': 'accept'
}
]]>
                    </script>
                </condition>
                <condition id="41bef984-d6b9-4ae2-9310-82e76044a9ad" name="Обеспечение не соответсвует" expression="process_vars[&apos;pledgesMatched&apos;] == False">
                    <script id="f9d1b6a3-5262-487b-a20d-ca7cfc849a31" name="Подготовка сообщения">
                        <![CDATA[
process_vars['message'] = '\n'.join([
    '{}'.format(x['name'] if x['name'] else 'Описание отсутствует, код обеспечения %s' % x['type']) for x in po['product']['constraints']['requiredPledges']
])]]>
                    </script>
                    <task id="8c233ce2-a8bd-44cf-8b1b-b7968cbc0c80" name="Информирование об отсутствии обеспечения" autoStart="true" description="Отсутствует обязательное обеспечение, заявка {{po.app.code}}, {{po.client.name}}">
                        <clientTask path="/easyflow/dialog" taskName="{{task.description}}">
                            <p name="caption" expression="task[&apos;description&apos;]"/>
                            <p name="message" expression="process_vars[&apos;message&apos;]"/>
                            <p name="actionVar" expression="&apos;action&apos;"/>
                            <p name="actions" expression="[  { &apos;name&apos;: &apos;В доработку&apos;, &apos;value&apos;: &apos;review&apos; } , { &apos;name&apos;: &apos;Отказать&apos;, &apos;value&apos;: &apos;decline&apos; }  ]"/>
                        </clientTask>
                    </task>
                    <script id="9fda7075-6644-46c5-926a-3621fb6e123e" name="Установка результата">
                        <journal time="leave">
                            <![CDATA[Отсутствует обязательное обеспечение: {%if process_vars.action == 'review' %}В доработку{%else%}Отказать{%endif%}]]>
                        </journal>
                        <![CDATA[process_vars['result'] = {
    'status': process_vars['action']
}
]]>
                    </script>
                </condition>
            </split>
        </condition>
        <condition id="b9ec9f3f-2cf2-41af-80fe-bcaebbdc3ee3" name="Без проверки">
            <script id="9ff85a37-be7b-428b-adbb-3c350b8cc508" name="Установка результата, проверка не требуется">
                <![CDATA[process_vars['result'] = {
    'status': 'accept'
}
]]>
            </script>
        </condition>
    </split>
</workflow>