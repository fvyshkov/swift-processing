<workflow id="APP_DECLINE_CLIENT" name="Отказ клиента">
    <event name="onGetProcessObject">
        <![CDATA[ok = process_vars.get('objectKey')


kv = ok.split(':')
pk = kv[1].split(',')


from colvir_cbs.auth import AuthenticatedUser
with AuthenticatedUser() as au:
    from apng_core.aoa.services import execObjectMethod
    token._po = execObjectMethod({
        'object': 'app', 'method': 'getApplication',
        'params': {
            'dep_id': int(pk[0]),
            'id'    : int(pk[1]),
        }
    })

]]>
    </event>
    <script id="d271651e-dbe8-4f7a-8018-5a974743f072" name="Инициализация">
        <![CDATA[ok = pv.get('objectKey')

kv = ok.split(':')
pk = kv[1].split(',')
pv['dep_id'] = int(pk[0])
pv['id'] = int(pk[1])

]]>
    </script>
    <script id="22cd0c62-a019-4044-a672-12d62276c18e" name="Проверка возможности запуска">
        <![CDATA[
#
# Состояние заявки
#
if po['state'] not in ('CREDEA'):
    raise Exception('Заявка не в состоянии "Создан договор", отказ клиента не возможен') from None


#
# Состояние договора
#
from colvir_cbs.auth import AuthenticatedUser
from colvir_cbs import oracle
import traceback


with AuthenticatedUser() as au:
    from colvir_cbs.services import ord
    po['dea'] = {
        **po['dea'],
        **ord.getState({
            'dep_id': po['dea']['dep_id'],
            'id': po['dea']['id'],
        })
    }
    

if po['dea']['state'] in ('ACTUAL', 'REGISTERED', 'REFUSEDEND', 'REFUSED'):
    raise UserException('Договор {deaCode} в состоянии {stateName}\nВыполнение операции запрещено'.format(
        deaCode=po['dea']['code'],
        stateName=po['dea']['stateName'],
    )) from None


#
# Наличие запущенных процессов отказа клиента
#
from apng_core.easyflow.models import Token
from apng_core.easyflow.services import RuntimeService as rs

filter = {
    'objectKey': pv['objectKey'],
    'parent': None,
    'flow_id': 'APP_DECLINE_CLIENT',
    'state__in': ['active', 'suspended']
}

processes = Token.objects.filter(**filter).exclude(id=token.process.id)
if len(processes) > 0:
    raise UserException('Процесс отказа клиента уже запущен, проверьте журнал заявки') from None


]]>
    </script>
    <timer id="be3df2fd-bd27-4c1d-a4f2-f4d9f76c31db" name="Удаление договора" description="Удаление договора {{po.dea.code}} по заявке {{po.app.code}}, {{po.client.name}}" duration="00:00:00" errorDuration="00:05:00" action="continue"/>
    <script id="40b82210-12e0-4acd-88cc-6200ef3a713c" name="Удаление договора">
        <journal time="leave">
            <![CDATA[{% if pv.deaDeleted %}Удален договор {{po.dea.code}} по решению исполнителя{% else %}Договор {{po.dea.code}} не удален, состояние {{pv.deaState.stateName}}{% endif %}]]>
        </journal>
        <![CDATA[from colvir_cbs.auth import AuthenticatedUser
from colvir_auth.models import ColvirUser

with AuthenticatedUser(user='COLVIR') as au:
    from colvir_cbs.services import ord
    pv['deaState'] = ord.getState({
        'dep_id': po['dea']['dep_id'],
        'id': po['dea']['id'],
    })
    
    if pv['deaState']['state'] not in ['DEL', 'REFUSED', 'REFUSEDEND', 'ACTUAL', 'OTKAZ_KL']:
        try:
            ord.delete({
                'dep_id': po['dea']['dep_id'],
                'id': po['dea']['id'],
                'undoOperations': True,
                'unlinkProcess': True,
            })
            pv['deaDeleted'] = True
        except Exception as e:
            raise UserException({
                'message': 'Ошибка удаления договора {code}, состояние {state}\n{message}'.format(
                    code = po['dea']['code'],
                    state = pv['deaState']['state'],
                    message = e
                )
            })
    else:
        pv['deaDeleted'] = False

]]>
    </script>
    <timer id="9ae7d817-36bb-4bc2-9951-d491eadf0b3f" name="Завершение процесса рассмотрения" description="Завершение процесса рассмотрения, заявка {{po.app.code}}, {{po.client.name}}" duration="00:00:00" errorDuration="00:01:00" action="continue"/>
    <script id="0584d4c6-3525-4833-ad5c-5deb19c3cb4d" name="Завершение процессов рассмотрения">
        <journal time="leave">
            <![CDATA[Рассмотрение заявки прервано]]>
        </journal>
        <![CDATA[from django.db import transaction
from django.conf import settings
from apng_core.easyflow.models import Token
from apng_core.easyflow.services import RuntimeService as rs

#
# Останавливаем процессы рассмотрения только для тех заявок которые были созданы после миграции
#
if po['app'].get('reviewWorkflow') and po['app'].get('importedLoanId') is None:

    filter = {
        'objectKey': pv['objectKey'],
        'parent': None,
        'flow_id': po['app']['reviewWorkflow'],
    }
    
    processes = Token.objects.filter(**filter)

    with transaction.atomic(using=settings.APPS_DB['easyflow']):
        for p in processes:
            rs.stopToken(p.id)



]]>
    </script>
    <timer id="29d7bb88-ec5f-4aa4-a4af-8d225c34202e" name="Регистрация отказа клиента" description="Регистрация отказа клиента, заявка {{po.app.code}}" duration="00:00:00" errorDuration="00:01:00" action="continue"/>
    <script id="f5e0ea9c-8d2d-4003-9262-68f449ecf8ea" name="Установка отказа клиента">
        <![CDATA[from apng_core.easyflow.auth import Authentication
from colvir_cbs.auth import AuthenticatedUser

with AuthenticatedUser(user=Authentication.getAuthenticatedUser().code) as au:
    decision_date = au.operday

pv['decision'] = {
    'decision': 'decline',
    'code': '01',
    'number': po['app']['code'],
    'date': decision_date,
    'text': 'Отказать',
    'declineReason': '08',
    'show_dialog': False,
}
]]>
    </script>
    <call id="73c8f07c-9b4d-4650-80f3-7bb157c41b7a" name="Регистрация решения" call="&apos;APP_REGISTER_DECISION&apos;" result_from="decision_registered" result_to="decision_registered">
        <p name="decision" expression="pv[&apos;decision&apos;]"/>
    </call>
    <call id="3564f98c-4964-46d3-888c-31695f92b188" name="Регистрация отказа во внешних системах" call="&apos;APP_REJECT_EXT&apos;">
        <p name="decision_registered" expression="pv.get(&apos;decision_registered&apos;)"/>
    </call>
    <script id="44f99724-ccb4-4f33-8f87-569a479ded2a" name="Установка состояния заявки: Отказ клиента">
        <![CDATA[from colvir_cbs.auth import AuthenticatedUser
from apng_core.aoa.services import execObjectMethod

#
# Тут действия нужно выполнять от инициатора процесса
#

with AuthenticatedUser(user=token.processToken.initiator):
    execObjectMethod({
        'object': 'app', 'method': 'setState',
        'params': {
            'dep_id': pv['dep_id'],
            'id': pv['id'],
            'state': 'REFUSAL_CLI',
            'stage': 'COMPLETED',
        }
    })
]]>
    </script>
</workflow>