<workflow id="APP_REGISTER_EXT" name="Регистрация заявки во внешних системах">
    <script id="init" name="Инициализация">
        <![CDATA[
ok = process_vars.get('objectKey')

kv = ok.split(':')
pk = kv[1].split(',')
process_vars['dep_id'] = int(pk[0])
process_vars['id'] = int(pk[1])

from apng_core.aoa.services import execObjectMethod

process_vars['appSettings'] = execObjectMethod({
    'object': 'settings',
    'method': 'get'
})['loanapp']

#raise Exception('Регистрация заявок во внешних системах запрещена')

]]>
    </script>
    <script id="8e4edf22-e1cc-4ada-8969-2df9f063fa35" name="Стадия рассмотрения">
        <![CDATA[execObjectMethod({
    'object': 'app', 'method': 'setState',
    'params': {
        'dep_id': pv['dep_id'],
        'id': pv['id'],
        'stage': 'REGNEW',
    }
})

]]>
    </script>
    <split id="88d5316f-0cd5-4f1b-8ce9-7ceb6875e8c7" name="Эмуляция ГРКИ">
        <condition id="e8299926-cc97-4a7e-8938-82970d5dd556" name="Да" expression="process_vars[&apos;appSettings&apos;][&apos;grki&apos;][&apos;emulator&apos;]">
            <script id="register_niki_result" name="Результат регистрации в ГРКИ">
                <journal time="leave">
                    <![CDATA[Связь с ГРКИ отключена]]>
                </journal>
                <![CDATA[
process_vars['niki_result'] = {
    'status': 'success',
    'state': 'CONFIRMED',
}

process_vars['nikiStatusOnline'] = {
    'status': 'success',
    'state': 'CONFIRMED',
}
]]>
            </script>
        </condition>
        <condition id="99b0c3bf-6277-451e-bc21-4608ec37e7ab" name="Нет" expression="not process_vars[&apos;appSettings&apos;][&apos;grki&apos;][&apos;emulator&apos;]">
            <call id="register_niki_process" name="Регистрация заявки в ГРКИ офлайн" call="&apos;NIKI_REGISTER&apos;" condition="process_vars[&apos;appSettings&apos;][&apos;grki&apos;][&apos;offline&apos;]" result_from="niki_result" result_to="niki_result">
                <p name="objectKey" expression="process_vars[&apos;objectKey&apos;]"/>
                <p name="req" expression="process_vars.get(&apos;req&apos;)"/>
                <p name="updateClient" expression="pv.get(&apos;updateClient&apos;, False)"/>
                <p name="localReview" expression="pv.get(&apos;localReview&apos;, False)"/>
            </call>
            <call id="c93af956-d004-4dba-8b18-a78fe2c1f9a9" name="Регистрация заявки в ГРКИ онлайн" call="&apos;NIKI_REGISTER_ONLINE&apos;" condition="process_vars.get(&apos;niki_result&apos;, {&apos;status&apos;: &apos;success&apos;}).get(&apos;status&apos;) == &apos;success&apos; and process_vars.get(&apos;appSettings&apos;) and process_vars[&apos;appSettings&apos;][&apos;grki&apos;][&apos;online&apos;]" result_from="grkiOnlineResult" result_to="nikiStatusOnline">
                <p name="updateClient" expression="pv.get(&apos;updateClient&apos;,  False)"/>
                <p name="localReview" expression="pv.get(&apos;localReview&apos;, False)"/>
            </call>
        </condition>
    </split>
    <split id="583d772b-43c8-4b5a-90fa-895170413f36" name="Результат регистрации в ГРКИ">
        <condition id="51c38d7a-4d92-4e70-8232-b60be2bd5f18" name="Успешно" expression="process_vars.get(&apos;niki_result&apos;, {&apos;status&apos;: &apos;success&apos;}).get(&apos;status&apos;) == &apos;success&apos; and process_vars.get(&apos;nikiStatusOnline&apos;, {&apos;status&apos;: &apos;success&apos;}).get(&apos;status&apos;) == &apos;success&apos;">
            <split id="6afd7034-7d00-4334-9c92-01baa160600f" name="Эмуляция регистрации в КАТМ">
                <condition id="0519efa1-e09a-4fbd-a1fa-b964b57e62b4" name="Да" expression="pv[&apos;appSettings&apos;][&apos;katm&apos;].get(&apos;emulator&apos;, False) == True if pv[&apos;appSettings&apos;].get(&apos;katm&apos;) else False">
                    <script id="e477cb0d-b4e7-4b03-94a3-ced2c076ee1f" name="Результат регистрации в КАТМ">
                        <journal time="leave">
                            <![CDATA[Связь с КАТМ отключена]]>
                        </journal>
                        <![CDATA[
process_vars['katm_result'] = {
    'status': 'success',
    'text': 'Успешно',
}

]]>
                    </script>
                </condition>
                <condition id="954da262-5cda-4c6e-a4f3-ff0dc3031d47" name="Нет" expression="pv[&apos;appSettings&apos;][&apos;katm&apos;].get(&apos;emulator&apos;, False) == False if pv[&apos;appSettings&apos;].get(&apos;katm&apos;) else True"/>
            </split>
            <call id="register_katm_process" name="Регистрация заявки в КАТМ" call="lv[&apos;ASOKI_REGISTER_WORKFLOW&apos;]" condition="pv[&apos;appSettings&apos;][&apos;katm&apos;].get(&apos;emulator&apos;, False) == False if pv[&apos;appSettings&apos;].get(&apos;katm&apos;) else True" result_from="katm_result" result_to="katm_result">
                <event name="beforeExecute">
                    <![CDATA[lv['ASOKI_REGISTER_WORKFLOW'] = next(filter(lambda x: x['code'] == 'AsokiRegisterWorkflow', pv['appSettings'].get('parameters', [])), {'value': 'KATM_REGISTER'})['value']
]]>
                </event>
                <p name="updateClient" expression="pv.get(&apos;updateClient&apos;, False)"/>
                <p name="localReview" expression="pv.get(&apos;localReview&apos;, False)"/>
            </call>
        </condition>
        <condition id="27f08fb0-cb62-443b-b674-e8680ba651ab" name="В доработку" expression="&apos;niki_result&apos; in process_vars and process_vars[&apos;niki_result&apos;][&apos;status&apos;] == &apos;review&apos; or &apos;nikiStatusOnline&apos; in process_vars and process_vars[&apos;nikiStatusOnline&apos;][&apos;status&apos;] == &apos;review&apos;"/>
    </split>
    <script id="rgister_ext_result" name="Регистрация результата в журнале">
        <journal time="leave">
            <![CDATA[Регистрация заявки во внешних системах: {{process_vars.REGISTER_RESULT.text}}]]>
        </journal>
        <![CDATA[
katm_result = process_vars.get('katm_result')
if not katm_result:
    katm_result = {
        'status': 'none'
    }
niki_result = process_vars.get('niki_result', {'status': 'success'})
niki_online = process_vars.get('nikiStatusOnline', {'status': 'success'})

if katm_result['status'] == 'review' or niki_result['status'] == 'review' or niki_online['status'] == 'review':
    process_vars['REGISTER_RESULT'] = {
        'status': 'review',
        'text': 'В доработку',
    }
elif katm_result['status'] == 'success' and niki_result['status'] == 'success' and niki_online['status'] == 'success':
    process_vars['REGISTER_RESULT'] = {
        'status': 'success',
        'text': 'Успешно',
    }
else:
    process_vars['REGISTER_RESULT'] = {
        'status': 'decline',
        'text': 'Отказано',
    }
    ]]>
    </script>
</workflow>