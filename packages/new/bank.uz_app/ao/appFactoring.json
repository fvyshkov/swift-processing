{
    "forms": {
        "appEditForm": {
            "title": "Форма редактирования заявки",
            "className": "vertical",
            "$": {
                "app": {
                    "className": "vertical",
                    "$": {
                        "@clientInfo": {
                            "object": "app",
                            "form": "clientInfoJurForm"
                        },
                        "@factoringForm": {
                            "object": "appFactoring",
                            "form": "appFactoringForm",
                            "params": {
                                "product$": "mem.product"
                            },
                            "readOnly$": "isReadOnly && (task.params.readOnly!==false)"
                        },
                        "@debtors": {
                            "object": "appFactoring",
                            "form": "debtorsForm",
                            "params": {
                                "product$": "mem.product",
                                "app$": "mem.app",
                                "client$": "mem.client",
                                "currency$": "mem.app.currency"
                            }
                        },
                        "@creditReport": {
                            "object": "app",
                            "form": "creditReportForm"
                        },
                        "@pledges": {
                            "object": "appPledge",
                            "form": "pledgesForm",
                            "params": {
                                "client$": "mem.client",
                                "pledgeMaxDate$": "mem.app.toDate"
                            }
                        },
                        "@afs": {
                            "object": "app",
                            "form": "afsProfileForm",
                            "readOnly$": "isReadOnly && (task.params.readOnly!==false)"
                        },
                        "@dossier": {
                            "object": "app",
                            "form": "dossierForm",
                            "visible$": "mem.dep_id && mem.id || false"
                        },
                        "@decisionInfo": {
                            "visible$": "!!mem.decisions",
                            "object": "app",
                            "form": "decisionInfoForm"
                        },
                        "@loanInfo": {
                            "visible$": "!!mem.app.importedLoanId || !!mem.dea",
                            "object": "loanapp",
                            "form": "loanInfoForm"
                        }
                    },
                    "actions": {
                        "refreshApp": {
                            "js": ";"
                        }
                    }
                }
            },
            "actions": {
                "onElementCreated": {
                    "js": "tm.setTaskTitle(task.key, `Заявка на факторинг ${!!mem.app?.app?.code?mem.app.app.code:'<Новая>'}, ${mem.app?.client?.name}`)"
                }
            }
        },
        "appFactoringForm": {
            "title": "Данные заявки",
            "$": {
                "@factoring": {
                    "className": "vertical navigated-content",
                    "title": "Параметры договора",
                    "titleClass": "navigated-title",
                    "$": {
                        "app": {
                            "className": "vertical",
                            "$": {
                                "@appid": {
                                    "className": "horizontal",
                                    "$": {
                                        "appId": {
                                            "label": "Уникальный номер заявки",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        },
                                        "code": {
                                            "label": "Юр.номер заявки",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        },
                                        "registrationDate": {
                                            "label": "Дата заявки",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "@product": {
                                    "className": "horizontal",
                                    "$": {
                                        "productCode": {
                                            "label": "Продукт",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit"
                                        },
                                        "productName": {
                                            "style": {
                                                "width": "570px"
                                            },
                                            "control": "TextEdit"
                                        }
                                    },
                                    "readOnly": true
                                },
                                "@dep": {
                                    "className": "horizontal",
                                    "$": {
                                        "depCode": {
                                            "label": "Подразделение",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit"
                                        },
                                        "depName": {
                                            "style": {
                                                "width": "570px"
                                            },
                                            "control": "TextEdit"
                                        }
                                    },
                                    "readOnly": true
                                },
                                "@period": {
                                    "className": "horizontal",
                                    "$": {
                                        "fromDate": {
                                            "label": "Дата начала",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit"
                                        },
                                        "toDate": {
                                            "label": "Дата окончания",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit",
                                            "validate": "mem.toDate<=mem.fromDate && {helperText: 'Не может быть меньше даты начала'} || undefined"
                                        },
                                        "toDateFin": {
                                            "label": "Дата окончания доступности",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit",
                                            "validate": "mem.toDateFin>mem.toDate && {helperText: 'Не может быть больше даты окончания'} || undefined"
                                        }
                                    },
                                    "required": true
                                },
                                "@productLimitType": {
                                    "className": "horizontal",
                                    "$": {
                                        "productLimitType": {
                                            "label": "Тип лимита",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "ObjectReference",
                                            "controlProps": {
                                                "object": "productLimitType",
                                                "params": {
                                                    "productCode$": "mem?.productCode"
                                                }
                                            },
                                            "controlOpts": {
                                                "valueField": "code",
                                                "postfixFields": {
                                                    "Name": "name"
                                                }
                                            },
                                            "required": true,
                                            "actions": {
                                                "onChange": {
                                                    "name": "refreshApp"
                                                }
                                            }
                                        },
                                        "productLimitTypeName": {
                                            "style": {
                                                "width": "570px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "@amount": {
                                    "className": "horizontal",
                                    "$": {
                                        "amount": {
                                            "label": "Сумма договора",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "CurrencyField",
                                            "required": true
                                        },
                                        "currency": {
                                            "label": "Валюта",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "@g2": {
                                    "className": "horizontal",
                                    "$": {
                                        "newObjectType": {
                                            "label": "Признак новообразования",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "ObjectSelectList",
                                            "controlProps": {
                                                "object": "bank_domain",
                                                "method": "getList",
                                                "params": {
                                                    "domain": "L_REQDSCROBJ"
                                                }
                                            },
                                            "controlOpts": {
                                                "translate": {
                                                    "value": "code",
                                                    "name": "name"
                                                }
                                            },
                                            "required": true
                                        },
                                        "existingWorkplaces": {
                                            "label": "Количество рабочих мест",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "NumericField",
                                            "controlProps": {
                                                "numericProps": {
                                                    "minimumValue": 0,
                                                    "maximumValue": 99999
                                                }
                                            },
                                            "required": true
                                        },
                                        "workplaces_num": {
                                            "label": "Количество создаваемых рабочих мест",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "NumericField",
                                            "controlProps": {
                                                "numericProps": {
                                                    "minimumValue": 0,
                                                    "maximumValue": 99999
                                                }
                                            },
                                            "required": true
                                        }
                                    }
                                },
                                "@legalAct": {
                                    "className": "horizontal",
                                    "$": {
                                        "legalAct": {
                                            "label": "Нормативно-правовой акт",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "ObjectReference",
                                            "controlProps": {
                                                "object": "legalAct"
                                            },
                                            "controlOpts": {
                                                "valueField": "code",
                                                "postfixFields": {
                                                    "Name": "name"
                                                }
                                            },
                                            "required": true
                                        },
                                        "legalActName": {
                                            "style": {
                                                "width": "570px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "@productParameters": {
                                    "object": "app",
                                    "form": "productParametersForm"
                                }
                            }
                        }
                    }
                }
            }
        },
        "debtorsForm": {
            "$": {
                "@debtors": {
                    "title": "Должники",
                    "titleClass": "navigated-title",
                    "className": "vertical navigated-content",
                    "style": {
                        "width": "860px"
                    },
                    "$": {
                        "@validator": {
                            "$": {
                                ".text": {
                                    "style": {
                                        "color": "red"
                                    },
                                    "control": "Text",
                                    "getter": "validator.helperText",
                                    "visible$": "validator.error && !!validator.helperText"
                                }
                            },
                            "validate": [
                                "mem.debtors.reduce((a,v)=>{return a+v.amount},0)>params.app.amount && {helperText: 'Сумма должника превышает сумму договора'} || undefined"
                            ]
                        },
                        ".ap": {
                            "control": "ActionPanel",
                            "controlOpts": {
                                "actions": [
                                    {
                                        "title": "Добавить",
                                        "icon": "add",
                                        "mini": true,
                                        "action": [
                                            {
                                                "js": "frontend.dialog({object: 'client', form: 'identifyClientJurDialog', mem: {}, params: {identifyClientOptions: {withRegistrationAddress: true}}});"
                                            }
                                        ],
                                        "disabled$": "isReadOnly"
                                    },
                                    {
                                        "title": "Просмотр",
                                        "icon": "view",
                                        "mini": true,
                                        "action": {
                                            "name": "viewDebtor",
                                            "params": {
                                                "debtor$": "context.selectedDebtor"
                                            }
                                        },
                                        "disabled$": "!context.selectedDebtor"
                                    },
                                    {
                                        "title": "Удалить",
                                        "icon": "delete",
                                        "mini": true,
                                        "action": {
                                            "name": "deleteDebtor",
                                            "confirm": {
                                                "title": "Удаление",
                                                "message$": "`Удалить должника ${context.selectedDebtor.client?.name}`",
                                                "yes": "Да",
                                                "no": "Нет"
                                            }
                                        },
                                        "disabled$": "isReadOnly || !context.selectedDebtor"
                                    }
                                ]
                            },
                            "actions": {
                                "onClientIdentified": [
                                    {
                                        "js": "(()=>{if(mem.client.code==params.client.code){task.busy.displayError('Должник не может быть кредитором'); throw 'Abort';}})()"
                                    },
                                    {
                                        "js": "(()=>{if(mem.debtors?.find((d)=>{return d.client.code==params.client.code})){task.busy.displayError(`Должник ${params.client.name} уже добавлен`); throw 'Abort'}})()"
                                    },
                                    {
                                        "js": "context.selectedDebtor=null; setTimeout(()=>frontend.dialog({object: 'appFactoring', form: 'debtorDialog', mem: {client: params.client, limitType: params.app.productLimitType, limitTypeName: params.app.productLimitTypeName, currency: params.app.currency}, params: {product: params.product}}), 0);",
                                        "disableUpdate": true
                                    }
                                ]
                            }
                        },
                        "|debtors": {
                            "className": "vertical",
                            "style": {
                                "marginBottom": "4px"
                            },
                            "control": "ListTable",
                            "controlProps": {
                                "context$": "(()=>{context.debtorsCtx=context.debtorsCtx||{}; return context.debtorsCtx;})()"
                            },
                            "controlOpts": {
                                "columns!": {
                                    "client": {
                                        "label": "Должник",
                                        "flex": 1,
                                        "getter": "data.client?.name"
                                    },
                                    "amount": {
                                        "label": "Сумма",
                                        "cellStyle": {
                                            "textAlign": "right"
                                        },
                                        "fields|": {
                                            "amount": {
                                                "format": "currency"
                                            },
                                            "currency": {}
                                        }
                                    }
                                }
                            },
                            "actions": {
                                "onRowDoubleClicked": {
                                    "name": "viewDebtor",
                                    "params": {
                                        "debtor$": "context.selectedDebtor"
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "onSelectionChanged": {
                            "js": "context.selectedDebtor = selectedRow;"
                        },
                        "viewDebtor": {
                            "js": "frontend.dialog({object: 'appFactoring', form: 'debtorDialog', mem: {...params.debtor}, params: {...params, readOnly: isReadOnly} });"
                        },
                        "onSaveDebtor": [
                            {
                                "js": "if (mem.client.code==params.debtor.client.code){frontend.displayError('Должник не может быть кредитором'); throw 'Abort';}"
                            },
                            {
                                "js": "if(context.selectedDebtor){mem.debtors.splice(mem.debtors.indexOf(context.selectedDebtor), 1, params.debtor); context.selectedDebtor=params.debtor; mem.debtors=[...mem.debtors];}else{mem.debtors=[...mem.debtors, params.debtor]}"
                            },
                            {
                                "name": "onDebtorsChanged"
                            }
                        ],
                        "deleteDebtor": [
                            {
                                "js": "mem.debtors.splice(mem.debtors.indexOf(context.selectedDebtor), 1); context.selectedDebtor=null; mem.debtors=[...mem.debtors];"
                            },
                            {
                                "name": "onDebtorsChanged"
                            }
                        ]
                    }
                }
            },
            "actions": {
                "onDebtorsChanged": {
                    "js": "cleanErrors();"
                },
                "onElementCreated": {}
            }
        },
        "debtorDialog": {
            "title": "Должник",
            "className": "vertical",
            "style": {
                "width": "900px",
                "overflow": "hidden"
            },
            "$": {
                "@form": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "4px",
                        "flex": 1,
                        "overflow": "auto"
                    },
                    "readOnly$": "!!params.readOnly",
                    "$": {
                        "@clientInfo": {
                            "object": "app",
                            "form": "clientInfoJurForm"
                        },
                        "@amount": {
                            "title": "Сумма",
                            "titleClass": "navigated-title",
                            "className": "vertical navigated-content",
                            "$": {
                                "@limitType": {
                                    "className": "horizontal",
                                    "$": {
                                        "limitType": {
                                            "label": "Тип лимита",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "ObjectReference",
                                            "controlProps": {
                                                "object": "productLimitType",
                                                "params": {
                                                    "productCode$": "params?.product?.code"
                                                }
                                            },
                                            "controlOpts": {
                                                "valueField": "code",
                                                "postfixFields": {
                                                    "Name": "name"
                                                }
                                            },
                                            "required": true
                                        },
                                        "limitTypeName": {
                                            "style": {
                                                "width": "570px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "@amount": {
                                    "className": "horizontal",
                                    "$": {
                                        "amount": {
                                            "label": "Сумма",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "CurrencyField",
                                            "required": true
                                        },
                                        "currency": {
                                            "label": "Валюта",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        }
                                    }
                                }
                            }
                        },
                        "@supplyContracts": {
                            "object": "appFactoring",
                            "form": "supplyContractsForm",
                            "params": {
                                "product$": "params.product",
                                "amount$": "mem.amount",
                                "currency$": "mem.currency",
                                "limitType$": "mem.limitType",
                                "limitTypeName$": "mem.limitTypeName"
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "flex-end"
                    },
                    "$": {
                        ".btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "text",
                                "color": "primary"
                            },
                            "action": {
                                "js": "actions.close()",
                                "disableUpdate": true
                            }
                        },
                        ".btnApply": {
                            "label": "Сохранить",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "contained",
                                "color": "primary"
                            },
                            "readOnly$": "!mem.client?.code || !!params.readOnly",
                            "action": [
                                {
                                    "js": "if(!validate())throw 'Abort'"
                                },
                                {
                                    "name": "onSaveDebtor",
                                    "params": {
                                        "debtor$": "mem"
                                    }
                                },
                                {
                                    "js": "actions.close();",
                                    "disableUpdate": true
                                }
                            ]
                        }
                    }
                }
            }
        },
        "supplyContractsForm": {
            "$": {
                "@supplyContracts": {
                    "title": "Договоры поставки",
                    "titleClass": "navigated-title",
                    "className": "vertical navigated-content",
                    "style": {
                        "width": "860px"
                    },
                    "$": {
                        "@validator": {
                            "$": {
                                ".text": {
                                    "style": {
                                        "color": "red"
                                    },
                                    "control": "Text",
                                    "getter": "validator.helperText",
                                    "visible$": "validator.error && !!validator.helperText"
                                }
                            },
                            "validate": [
                                "mem.supplyContracts.reduce((a,v)=>{return a+v.amount},0)>params.amount && {helperText: 'Сумма договоров поставки превышает сумму должника'} || undefined"
                            ]
                        },
                        ".ap": {
                            "control": "ActionPanel",
                            "controlOpts": {
                                "actions": [
                                    {
                                        "title": "Добавить",
                                        "icon": "add",
                                        "mini": true,
                                        "action": [
                                            {
                                                "js": "frontend.dialog({object: 'appFactoring', form: 'supplyContractDialog', mem: {currency: params.currency, limitType: params.limitType, limitTypeName: params.limitTypeName}, params: {product: params.product}});"
                                            }
                                        ],
                                        "disabled$": "isReadOnly"
                                    },
                                    {
                                        "title": "Просмотр",
                                        "icon": "view",
                                        "mini": true,
                                        "action": {
                                            "name": "viewSupplyContract",
                                            "params": {
                                                "supplyContract$": "context.selectedSupplyContract"
                                            }
                                        },
                                        "disabled$": "!context.selectedSupplyContract"
                                    },
                                    {
                                        "title": "Удалить",
                                        "icon": "delete",
                                        "mini": true,
                                        "action": {
                                            "name": "deleteSupplyContract",
                                            "confirm": {
                                                "title": "Удаление",
                                                "message$": "`Удалить договора поставки ${context.selectedSupplyContract.number}`",
                                                "yes": "Да",
                                                "no": "Нет"
                                            }
                                        },
                                        "disabled$": "isReadOnly || !context.selectedSupplyContract"
                                    }
                                ]
                            }
                        },
                        "|supplyContracts": {
                            "className": "vertical",
                            "style": {
                                "marginBottom": "4px"
                            },
                            "control": "ListTable",
                            "controlProps": {
                                "listContext$": "(()=>{context.supplyContractCtx=context.supplyContractCtx||{}; return context.supplyContractCtx;})()",
                                "context$": "context"
                            },
                            "controlOpts": {
                                "compact": true,
                                "refreshEvent": "refreshContracts",
                                "columns!": {
                                    "number": {
                                        "label": "Номер",
                                        "width": 150
                                    },
                                    "date": {
                                        "label": "Дата",
                                        "width": 100,
                                        "format": "date"
                                    },
                                    "amount": {
                                        "label": "Сумма",
                                        "width": 150,
                                        "cellStyle": {
                                            "textAlign": "right"
                                        },
                                        "fields|": {
                                            "amount": {
                                                "format": "currency"
                                            },
                                            "currency": {}
                                        }
                                    },
                                    "defermentFrom": {
                                        "label": "Отсрочка",
                                        "width": 250,
                                        "getter": "context.defermentFromRef?.find?.((r)=>r.code==data.defermentFrom)?.name"
                                    },
                                    "defermentDays": {
                                        "label": "Дни",
                                        "width": 60
                                    }
                                }
                            },
                            "actions": {
                                "onRowDoubleClicked": {
                                    "name": "viewSupplyContract",
                                    "params": {
                                        "supplyContract$": "context.selectedSupplyContract"
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "onSelectionChanged": {
                            "js": "context.selectedSupplyContract = selectedRow;"
                        },
                        "viewSupplyContract": {
                            "js": "frontend.dialog({object: 'appFactoring', form: 'supplyContractDialog', mem: {...params.supplyContract}, params: {...params, readOnly: isReadOnly} });"
                        },
                        "onSaveSupplyContract": [
                            {
                                "js": "if(context.selectedSupplyContract){mem.supplyContracts.splice(mem.supplyContracts.indexOf(context.selectedSupplyContract), 1, params.supplyContract); context.selectedSupplyContract=params.supplyContract; mem.supplyContracts=[...mem.supplyContracts];}else{mem.supplyContracts=[...mem.supplyContracts, params.supplyContract]}"
                            },
                            {
                                "name": "onSupplyContractsChanged"
                            }
                        ],
                        "deleteSupplyContract": [
                            {
                                "js": "mem.supplyContracts.splice(mem.supplyContracts.indexOf(context.selectedSupplyContract), 1); context.selectedSupplyContract=null; mem.supplyContracts=[...mem.supplyContracts];"
                            },
                            {
                                "name": "onSupplyContractsChanged"
                            }
                        ]
                    }
                }
            },
            "actions": {
                "onSupplyContractsChanged": {
                    "js": "cleanErrors();"
                },
                "onElementCreated": [
                    {
                        "js": "backend.post('/aoa/execObjectMethod', {object: 'bank_domain', method: 'getList', params: {domain: 'FC_DATE_FROM'}}, {useCache: true}).then((r)=>{context.defermentFromRef=r; forceUpdate(); task.events.fireEvent('refreshContracts');})"
                    }
                ]
            }
        },
        "supplyContractDialog": {
            "title": "Договор поставки",
            "className": "vertical",
            "style": {
                "width": "900px",
                "overflow": "hidden"
            },
            "$": {
                "@form": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "4px",
                        "flex": 1,
                        "overflow": "auto"
                    },
                    "readOnly$": "!!params.readOnly",
                    "$": {
                        "@id": {
                            "className": "horizontal",
                            "required": true,
                            "$": {
                                "number": {
                                    "label": "Номер договора поставки",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "TextEdit"
                                },
                                "date": {
                                    "label": "Дата договора поставки",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "DateEdit"
                                },
                                "toDate": {
                                    "label": "Дата завершения",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "DateEdit"
                                }
                            }
                        },
                        "@limitType": {
                            "className": "horizontal",
                            "$": {
                                "limitType": {
                                    "label": "Тип лимита",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "ObjectReference",
                                    "controlProps": {
                                        "object": "productLimitType",
                                        "params": {
                                            "productCode$": "params?.product?.code"
                                        }
                                    },
                                    "controlOpts": {
                                        "valueField": "code",
                                        "postfixFields": {
                                            "Name": "name"
                                        }
                                    },
                                    "required": true
                                },
                                "limitTypeName": {
                                    "style": {
                                        "width": "570px"
                                    },
                                    "control": "TextEdit",
                                    "readOnly": true
                                }
                            },
                            "readOnly": true
                        },
                        "@amount": {
                            "className": "horizontal",
                            "$": {
                                "amount": {
                                    "label": "Сумма",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "CurrencyField",
                                    "required": true
                                },
                                "currency": {
                                    "label": "Валюта",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "TextEdit",
                                    "readOnly": true
                                }
                            }
                        },
                        "@deferment": {
                            "className": "horizontal",
                            "required": true,
                            "$": {
                                "defermentType": {
                                    "style": {
                                        "width": "280px"
                                    },
                                    "label": "Тип отсрочки",
                                    "control": "ObjectSelectList",
                                    "controlProps": {
                                        "object": "bank_domain",
                                        "method": "getList",
                                        "params": {
                                            "domain": "FC_WORK_DAY"
                                        }
                                    },
                                    "controlOpts": {
                                        "translate": {
                                            "value": "code",
                                            "name": "name"
                                        }
                                    }
                                },
                                "defermentDays": {
                                    "label": "Количество дней отсрочки",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "PositiveIntegerField"
                                },
                                "defermentFrom": {
                                    "label": "Начало расчета отсрочки",
                                    "style": {
                                        "width": "280px"
                                    },
                                    "control": "ObjectSelectList",
                                    "controlProps": {
                                        "object": "cbs.domain",
                                        "method": "getList",
                                        "params": {
                                            "domain": "FC_DATE_FROM"
                                        }
                                    },
                                    "controlOpts": {
                                        "translate": {
                                            "value": "code",
                                            "name": "name"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "flex-end"
                    },
                    "$": {
                        ".btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "text",
                                "color": "primary"
                            },
                            "action": {
                                "js": "actions.close()",
                                "disableUpdate": true
                            }
                        },
                        ".btnApply": {
                            "label": "Сохранить",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "contained",
                                "color": "primary"
                            },
                            "readOnly$": "!!params.readOnly",
                            "action": [
                                {
                                    "js": "if(!validate())throw 'Abort'"
                                },
                                {
                                    "name": "onSaveSupplyContract",
                                    "params": {
                                        "supplyContract$": "mem"
                                    }
                                },
                                {
                                    "js": "actions.close();",
                                    "disableUpdate": true
                                }
                            ]
                        }
                    }
                }
            }
        },
        "lookupProductFactoringListForm": {
            "title": "Договоры факторинга",
            "$": {
                "|factorings": {
                    "control": "ListTable",
                    "controlOpts": {
                        "$": {
                            "product": {
                                "label": "Продукт",
                                "flex": 1,
                                "fields|": {
                                    "productCode": {},
                                    "productName": {}
                                }
                            },
                            "code": {
                                "label": "Номер договора",
                                "width": 150
                            },
                            "fromDate": {
                                "label": "Дата начала",
                                "width": 130,
                                "format": "date"
                            },
                            "toDate": {
                                "label": "Дата окончания",
                                "width": 130,
                                "format": "date"
                            },
                            "termDate": {
                                "label": "Дата завершения",
                                "width": 130,
                                "format": "date"
                            },
                            "currency": {
                                "label": "Валюта",
                                "width": 100
                            }
                        }
                    }
                }
            },
            "actions": {
                "onSelectionChanged": [
                    {
                        "js": "context.selectedFactoring = selectedRow;"
                    },
                    {
                        "name": "refreshTask"
                    }
                ]
            }
        },
        "appMonetaryClaimForm": {
            "title": "Финансирование денежного требования по факторингу",
            "className": "vertical",
            "$": {
                "app": {
                    "className": "vertical",
                    "$": {
                        "@factoringInfo": {
                            "object": "appFactoring",
                            "form": "factoringInfoForm"
                        },
                        "@clientInfo": {
                            "object": "app",
                            "form": "clientInfoJurForm",
                            "params": {
                                "title": "Данные кредитора",
                                "titleAddress": "Адрес кредитора"
                            }
                        },
                        "@app": {
                            "object": "appFactoring",
                            "form": "monetaryClaimForm",
                            "params": {
                                "product$": "mem.product"
                            },
                            "readOnly$": "isReadOnly && (task.params.readOnly!==false)"
                        },
                        "@creditReport": {
                            "object": "app",
                            "form": "creditReportForm"
                        },
                        "@afs": {
                            "object": "app",
                            "form": "afsProfileForm",
                            "readOnly$": "isReadOnly && (task.params.readOnly!==false)"
                        },
                        "@dossier": {
                            "object": "app",
                            "form": "dossierForm",
                            "visible$": "mem.dep_id && mem.id || false"
                        },
                        "@decisionInfo": {
                            "visible$": "!!mem.decisions",
                            "object": "app",
                            "form": "decisionInfoForm"
                        },
                        "@loanInfo": {
                            "visible$": "!!mem.app.importedLoanId || !!mem.dea",
                            "object": "loanapp",
                            "form": "loanInfoForm"
                        }
                    }
                }
            }
        },
        "monetaryClaimForm": {
            "title": "Данные заявки",
            "$": {
                "@claim": {
                    "className": "vertical navigated-content",
                    "title": "Параметры денежного требования",
                    "titleClass": "navigated-title",
                    "$": {
                        "app": {
                            "className": "vertical",
                            "$": {
                                "@appid": {
                                    "className": "horizontal",
                                    "$": {
                                        "appId": {
                                            "label": "Уникальный номер заявки",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        },
                                        "code": {
                                            "label": "Юр.номер заявки",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        },
                                        "registrationDate": {
                                            "label": "Дата заявки",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit",
                                            "readOnly": true
                                        }
                                    }
                                },
                                "@g2": {
                                    "className": "horizontal",
                                    "$": {
                                        "newObjectType": {
                                            "label": "Признак новообразования",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "ObjectSelectList",
                                            "controlProps": {
                                                "object": "bank_domain",
                                                "method": "getList",
                                                "params": {
                                                    "domain": "L_REQDSCROBJ"
                                                }
                                            },
                                            "controlOpts": {
                                                "translate": {
                                                    "value": "code",
                                                    "name": "name"
                                                }
                                            },
                                            "required": true
                                        },
                                        "existingWorkplaces": {
                                            "label": "Кол-во рабочих мест",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "NumericField",
                                            "controlProps": {
                                                "numericProps": {
                                                    "minimumValue": 0,
                                                    "maximumValue": 99999
                                                }
                                            },
                                            "required": true
                                        },
                                        "workplaces_num": {
                                            "label": "Кол-во создаваемых рабочих мест",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "NumericField",
                                            "controlProps": {
                                                "numericProps": {
                                                    "minimumValue": 0,
                                                    "maximumValue": 99999
                                                }
                                            },
                                            "required": true
                                        }
                                    }
                                },
                                "@product": {
                                    "className": "horizontal",
                                    "$": {
                                        "productCode": {
                                            "label": "Продукт",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit"
                                        },
                                        "productName": {
                                            "style": {
                                                "width": "570px"
                                            },
                                            "control": "TextEdit"
                                        }
                                    },
                                    "readOnly": true
                                },
                                "debtor": {
                                    "className": "horizontal",
                                    "$": {
                                        "code": {
                                            "label": "Должник",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "ButtonTextEdit",
                                            "controlProps": {
                                                "textReadOnly": true
                                            },
                                            "action": {
                                                "js": "frontend.dialog({object: 'appFactoring', form: 'debtorSelectDialog', mem: {}, context: {}, params: {dep_id: params.factoring.dep_id, id: params.factoring.id}})"
                                            },
                                            "required": true
                                        },
                                        "name": {
                                            "label": "",
                                            "style": {
                                                "width": "560px"
                                            },
                                            "control": "TextEdit",
                                            "readOnly": true
                                        }
                                    },
                                    "actions": {
                                        "onDebtorSelected": [
                                            {
                                                "js": "validator.$.code.error=false; mem.code = params.debtor.code; mem.name = params.debtor.name;"
                                            }
                                        ]
                                    },
                                    "params": {
                                        "factoring$": "mem.factoring"
                                    }
                                },
                                "supplyContract": {
                                    "className": "vertical",
                                    "$": {
                                        "@l1": {
                                            "className": "horizontal",
                                            "$": {
                                                "code": {
                                                    "label": "Договор поставки",
                                                    "style": {
                                                        "width": "280px"
                                                    },
                                                    "control": "ButtonTextEdit",
                                                    "controlProps": {
                                                        "textReadOnly": true
                                                    },
                                                    "action": {
                                                        "js": "frontend.dialog({object: 'appFactoring', form: 'supplyContractSelectDialog', mem: {}, context: {}, params: {dep_id: params.factoring.dep_id, id: params.factoring.id, debtorCode: params.debtor.code}})"
                                                    },
                                                    "required": true
                                                },
                                                "registrationDate": {
                                                    "label": "Дата",
                                                    "style": {
                                                        "width": "280px"
                                                    },
                                                    "control": "DateEdit",
                                                    "readOnly": true
                                                },
                                                "defermentDays": {
                                                    "label": "Отсрочка",
                                                    "style": {
                                                        "width": "280px"
                                                    },
                                                    "control": "PositiveIntegerField",
                                                    "readOnly": true
                                                }
                                            }
                                        },
                                        "@l2": {
                                            "className": "horizontal",
                                            "$": {
                                                "amount": {
                                                    "label": "Сумма",
                                                    "style": {
                                                        "width": "280px"
                                                    },
                                                    "control": "CurrencyField",
                                                    "readOnly": true
                                                },
                                                "currency": {
                                                    "label": "Валюта",
                                                    "style": {
                                                        "width": "280px"
                                                    },
                                                    "control": "TextEdit",
                                                    "readOnly": true
                                                }
                                            }
                                        }
                                    },
                                    "params": {
                                        "factoring$": "mem.factoring",
                                        "debtor$": "mem.debtor"
                                    },
                                    "actions": {
                                        "onContractSelected": [
                                            {
                                                "js": "mem.contractId = params.contract.contractId; mem.code = params.contract.code; mem.registrationDate = params.contract.registrationDate; mem.amount = params.contract.amount; mem.currency = params.contract.currency; mem.defermentDays = params.contract.defermentDays;"
                                            },
                                            {
                                                "name": "onContractChanged"
                                            }
                                        ]
                                    }
                                },
                                "@foundationDocument": {
                                    "title": "Документ основания",
                                    "className": "vertical",
                                    "$": {
                                        "foundationDocument": {
                                            "className": "vertical",
                                            "required": true,
                                            "$": {
                                                "@type": {
                                                    "className": "horizontal",
                                                    "$": {
                                                        "type": {
                                                            "label": "Тип",
                                                            "style": {
                                                                "width": "280px"
                                                            },
                                                            "control": "ObjectReference",
                                                            "controlProps": {
                                                                "object": "appFactoring",
                                                                "reference": "foundationDocument"
                                                            },
                                                            "controlOpts": {
                                                                "valueField": "code",
                                                                "postfixFields": {
                                                                    "Name": "name"
                                                                }
                                                            }
                                                        },
                                                        "typeName": {
                                                            "label": "",
                                                            "style": {
                                                                "width": "570px"
                                                            },
                                                            "control": "TextEdit",
                                                            "readOnly": true
                                                        }
                                                    }
                                                },
                                                "@doc": {
                                                    "className": "horizontal",
                                                    "$": {
                                                        "number": {
                                                            "label": "Номер",
                                                            "style": {
                                                                "width": "280px"
                                                            },
                                                            "control": "TextEdit"
                                                        },
                                                        "date": {
                                                            "label": "Дата",
                                                            "style": {
                                                                "width": "280px"
                                                            },
                                                            "control": "DateEdit"
                                                        }
                                                    }
                                                },
                                                "@docAmount": {
                                                    "className": "horizontal",
                                                    "$": {
                                                        "amount": {
                                                            "label": "Сумма документа",
                                                            "style": {
                                                                "width": "280px"
                                                            },
                                                            "control": "CurrencyField"
                                                        },
                                                        "amountOfConcession": {
                                                            "label": "Сумма уступки",
                                                            "style": {
                                                                "width": "280px"
                                                            },
                                                            "control": "CurrencyField"
                                                        },
                                                        "currency": {
                                                            "label": "Валюта",
                                                            "style": {
                                                                "width": "280px"
                                                            },
                                                            "control": "TextEdit",
                                                            "readOnly": true,
                                                            "required": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "actions": {
                                "onContractChanged": {
                                    "js": "mem.foundationDocument.currency = mem.supplyContract.currency;"
                                }
                            },
                            "validate": [
                                "(()=>{mem.amount=mem.foundationDocument.amountOfConcession;})()"
                            ]
                        }
                    }
                }
            }
        },
        "factoringInfoForm": {
            "$": {
                "@factoring": {
                    "title": "Договор факторинга",
                    "className": "vertical",
                    "$": {
                        "app": {
                            "$": {
                                "factoring": {
                                    "className": "horizontal",
                                    "$": {
                                        "code": {
                                            "label": "Номер договора",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "TextEdit"
                                        },
                                        "fromDate": {
                                            "label": "Дата начала",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit"
                                        },
                                        "toDate": {
                                            "label": "Дата окончания",
                                            "style": {
                                                "width": "280px"
                                            },
                                            "control": "DateEdit"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "readOnly": true
                }
            }
        },
        "debtorSelectDialog": {
            "title": "Выбор должника",
            "className": "vertical",
            "style": {
                "width": "900px",
                "overflow": "hidden"
            },
            "$": {
                "@form": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "4px",
                        "flex": 1,
                        "overflow": "auto"
                    },
                    "$": {
                        "|debtors": {
                            "control": "ListTable",
                            "controlOpts": {
                                "columns!": {
                                    "code": {
                                        "label": "Код",
                                        "width": 200,
                                        "compact": true
                                    },
                                    "name": {
                                        "label": "Наименование",
                                        "flex": 1,
                                        "compact": true
                                    }
                                }
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "flex-end"
                    },
                    "$": {
                        ".btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "text",
                                "color": "primary"
                            },
                            "action": {
                                "js": "actions.close()",
                                "disableUpdate": true
                            }
                        },
                        ".btnApply": {
                            "label": "Выбрать",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "contained",
                                "color": "primary"
                            },
                            "readOnly$": "!context.selectedDebtor",
                            "action": [
                                {
                                    "js": "if(!validate())throw 'Abort'"
                                },
                                {
                                    "name": "onDebtorSelected",
                                    "params": {
                                        "debtor$": "context.selectedDebtor"
                                    }
                                },
                                {
                                    "js": "actions.close();",
                                    "disableUpdate": true
                                }
                            ]
                        }
                    }
                }
            },
            "actions": {
                "onElementCreated": [
                    {
                        "js": "backend.post('/aoa/execObjectMethod', {object: 'appFactoring', method: 'getFactoringDebtors', params: {dep_id: params.dep_id, id: params.id}}).then((r)=>{mem.debtors=r; forceUpdate();})"
                    }
                ],
                "onSelectionChanged": {
                    "js": "context.selectedDebtor = selectedRow;"
                }
            }
        },
        "supplyContractSelectDialog": {
            "title": "Выбор договора поставки",
            "className": "vertical",
            "style": {
                "width": "900px",
                "overflow": "hidden"
            },
            "$": {
                "@form": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "4px",
                        "flex": 1,
                        "overflow": "auto"
                    },
                    "$": {
                        "|contracts": {
                            "control": "ListTable",
                            "controlOpts": {
                                "compact": true,
                                "columns!": {
                                    "code": {
                                        "label": "Код",
                                        "width": 150
                                    },
                                    "registrationDate": {
                                        "label": "Дата регистрации",
                                        "width": 120,
                                        "format": "date"
                                    },
                                    "endDate": {
                                        "label": "Дата окончания",
                                        "width": 120,
                                        "format": "date"
                                    },
                                    "amount": {
                                        "label": "Сумма",
                                        "width": 200,
                                        "fields|": {
                                            "amount": {
                                                "format": "currency"
                                            },
                                            "currency": {}
                                        }
                                    },
                                    "defermentDays": {
                                        "label": "Отсрочка",
                                        "width": 100
                                    }
                                }
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "flex-end"
                    },
                    "$": {
                        ".btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "text",
                                "color": "primary"
                            },
                            "action": {
                                "js": "actions.close()",
                                "disableUpdate": true
                            }
                        },
                        ".btnApply": {
                            "label": "Выбрать",
                            "control": "Button",
                            "controlProps": {
                                "style": {
                                    "textTransform": "none"
                                },
                                "variant": "contained",
                                "color": "primary"
                            },
                            "readOnly$": "!context.selectedContract",
                            "action": [
                                {
                                    "js": "if(!validate())throw 'Abort'"
                                },
                                {
                                    "name": "onContractSelected",
                                    "params": {
                                        "contract$": "context.selectedContract"
                                    }
                                },
                                {
                                    "js": "actions.close();",
                                    "disableUpdate": true
                                }
                            ]
                        }
                    }
                }
            },
            "actions": {
                "onElementCreated": [
                    {
                        "js": "backend.post('/aoa/execObjectMethod', {object: 'appFactoring', method: 'getFactoringSupplyContracts', params: {dep_id: params.dep_id, id: params.id, debtorCode: params.debtorCode}}).then((r)=>{mem.contracts=r; forceUpdate();})"
                    }
                ],
                "onSelectionChanged": {
                    "js": "context.selectedContract = selectedRow;"
                }
            }
        }
    },
    "methods": {
        "createFactoring": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "SQL=\"\"\"\n    declare\n        idDeaDep number;\n        idDea number;\n        r L_REQDEA%%rowtype;\n        ro T_ORD%%rowtype;\n        pm T_PROCMEM%%rowtype;\n        nNJRN number;\n        \n        idDeb number;\n\n        fromDate date;\n        toDate date;\n        toDateFin date;\n        \n        idDepClient number;\n        idClient number;\n        \n\n    begin\n        t_log.penable; t_log.clean;\n        \n        select * into r from L_REQDEA where DEP_ID=:req_dep_id and ID=:req_id;\n        select * into ro from T_ORD where DEP_ID=:req_dep_id and ID=:req_id;\n        select * into pm from T_PROCMEM where DEP_ID=:req_dep_id and ORD_ID=:req_id and MAINFL='1';\n        \n\n        idDeaDep := :req_dep_id;\n        \n        --\n        -- Ищем ранее созданный договор. Возможно из за порванной транзакции\n        --\n        select \n            (select ord_id from t_procmem where id=pm.id and MAINFL='0')\n        into idDea from dual;\n\n        if idDea is null then\n            -- Добавляем к процессу заявки псевдо операцию\n            declare\n            begin\n                select nvl(max(NJRN)+1, 1) into nNJRN from T_OPERJRN where ID=pm.ID;\n                insert into T_OPERJRN(\n                    ID, NJRN, BOP_ID, \n                    NOPER,\n                    DEP_ID, ORD_ID,\n                    DOPER, TUS_ID,\n                    DSCR \n                )values(\n                    pm.ID, nNJRN, pm.BOP_ID,\n                    (select NORD from T_SCEN_STD where ID=pm.BOP_ID and CODE='_RUN_ANL_ACM_'),\n                    :req_dep_id, :req_id,\n                    P_OPERDAY, p_idus,\n                    'Создание договора'\n                );\n            end;\n        else\n            -- Берём последнюю операцию по заявке\n            select max(NJRN) into nNJRN from T_OPERJRN where ID=pm.ID;\n        end if;\n    \n        fromDate := to_date(substr(json_value(r.json, '$.app.fromDate'),1,10), 'yyyy-mm-dd');\n        toDate := to_date(substr(json_value(r.json, '$.app.toDate'),1,10), 'yyyy-mm-dd');\n        toDateFin := to_date(substr(json_value(r.json, '$.app.toDateFin'),1,10), 'yyyy-mm-dd');\n        \n        G_PkgCli.pGetCliId(json_value(r.json, '$.client.code'), idDepClient, idClient);\n        \n        -- Сохранение и удаление заявки\n        FC_BSDEA.pSave(\n            nDep_Id      => idDeaDep,\n            nId          => idDea,\n            sDcl_Code    => json_value(r.json, '$.app.productCode'),\n            sCode        => null,\n            dOrd         => p_operday,\n            dFromDate    => fromDate,\n            sAmount      => json_value(r.json, '$.app.amount'),\n            sValCode     => json_value(r.json, '$.app.currency'),\n            nCliDepId    => idDepClient,\n            nCliId       => idClient,\n            nSrvDepId    => null,\n            dToDate      => toDate,\n            dTermDate    => toDateFin,\n            sPrim        => null,\n            nParentProc  => pm.ID,\n            nParentOpr   => nNJRN,\n            sStatCode    => null,\n            dRecv        => null,\n            sREFER       => null,\n            nTUS_ID      => null,\n            nTrf_IdCat   => null,\n            sTimeType    => null,\n            nTimeUnit    => null,\n            nLimTypeId   => json_value(r.json, '$.app.productLimitType')\n        );\n        \n        \n        -- Сохранение должников \n        for debtor in (\n            select * from json_table(r.json, '$.debtors[*]' columns(json clob format json path '$'))\n        ) loop\n            declare\n                idDebtor number;\n                idDepDebtor number;\n                idDeb number;\n            begin\n                -- Карточка долждника\n                G_PkgCli.pGetCliId(json_value(debtor.json, '$.client.code'), idDepDebtor, idDebtor);\n                \n                -- Сохранение должника\n                FC_BSDEA.pUpdDeaCli(\n                    nId         => idDeb,\n                    nDeaDepId   => idDeaDep,\n                    nDeaId      => idDea,\n                    nCliDepId   => idDepDebtor,\n                    nCliId      => idDebtor,\n                    sAmount     => json_value(debtor.json, '$.amount'),\n                    nValId      => T_PkgVal.fValCode2Id(json_value(debtor.json, '$.currency')),\n                    nLimTypeId  => json_value(debtor.json, '$.limitType'),\n                    sDelFl      => '0'\n                );\n                \n                for contract in (\n                    select * from json_table(debtor.json, '$.supplyContracts[*]' columns(json clob format json path '$'))\n                ) loop\n                    declare\n                        idContract number;\n                    begin\n                        FC_BSDEA.pUpdDeaCliCtr(\n                            nDbtId         => idDeb,\n                            nCtrId         => idContract,\n                            nNord          => null,\n                            sCode          => json_value(contract.json, '$.number'),\n                            sBnkCode       => null,\n                            dRegDate       => to_date(substr(json_value(contract.json, '$.date'),1,10), 'yyyy-mm-dd'),\n                            dToDate        => to_date(substr(json_value(contract.json, '$.toDate'),1,10), 'yyyy-mm-dd'),\n                            sAmount        => json_value(contract.json, '$.amount'),\n                            nValId         => T_PkgVal.fValCode2Id(json_value(contract.json, '$.currency')),\n                            nLimTypeId     => json_value(contract.json, '$.limitType'),\n                            nDayCountDelay => json_value(contract.json, '$.defermentDays'),\n                            nTypeDalay     => json_value(contract.json, '$.defermentType'),\n                            sDelayCond     => null,\n                            sDelFl         => '0',\n                            sCalcDay       => json_value(contract.json, '$.defermentFrom')\n                        );\n                    end;\n\n                end loop;\n            end;\n        end loop;\n\n\n        :dea_dep_id := idDeaDep;\n        :dea_id := idDea;\n        select CODE into :dea_code from T_ORD where DEP_ID=idDeaDep and ID=idDea;\n        \n        \n        -- Добавление участника в процесс заявки\n        declare\n            op BS_OPERATION.SelfAttr;\n            memCnt integer;\n        begin\n            --delete from t_procmem where id=pm.id and mainfl=0;\n            select count(*) into memCnt from t_procmem where id=pm.id and mainfl=0 and dep_id=idDeaDep and ord_id=idDea;\n            if memCnt = 0 then\n                BS_OPERATION.read_process(op, pm.id);\n                BS_OPERATION.add_mem(op, P_IDDEP=>idDeaDep, p_idord=>idDea, p_nmem=>BS_BOP.fGetPosId(pm.BOP_ID, 'DEA'));\n            end if;\n        end;\n        \n        -- id заявки\n        T_PkgDeaPrm.pSetPrm(idDea, idDeaDep,\n            'L_UNNUMBER', \n            json_value(r.json, '$.app.appId')\n        );\n        \n    \n        --\n        -- Копирование параметров из заявки в договор\n        --\n        declare\n            dg clob;\n        begin\n            select json_dataguide(json_query(r.json, '$.app.parameters')) into dg from dual;\n            for rec in (\n                select substr(path, 3) param\n                from json_table(dg, '$[*]' columns (path varchar2 path '$.\"o:path\"'))\n            ) loop\n                T_PkgDeaPrm.pSetPrm(idDea, idDeaDep,\n                    rec.param, json_value(r.json, '$.app.parameters.'||rec.param)\n                );\n                \n            end loop;\n        end;\n\n        \n        :operday := P_OPERDAY;\n    \n    \n    end;\n\n\"\"\"\n\nfrom colvir_cbs.services import log\n\nwith initDbSession(application='colvir_cbs').cursor() as cursor:\n    p = {\n        'req_dep_id': parameters['req_dep_id'],\n        'req_id': parameters['req_id'],\n        'dea_dep_id': cursor.var(int),\n        'dea_id': cursor.var(int),\n        'dea_code': cursor.var(str),\n        'operday': cursor.var(str),\n    }\n    \n    try:\n        cursor.execute(SQL, p)\n    except Exception as e:\n        raise UserException({\n            'message': 'Ошибка создания договора\\n%s' % e,\n            'trace': log.readLog()\n        })\n        \n        \n    data = {\n        'dep_id': p['dea_dep_id'].getvalue(),\n        'id': p['dea_id'].getvalue(),\n        'code': p['dea_code'].getvalue(),\n        'log': log.readLog(),\n    }\n        \n    "
            }
        },
        "getTypesOfFoundDocs": {
            "sql": {
                "params": [],
                "sqlType": "query",
                "database": "colvir_cbs",
                "sql": "select \r\n    dt.code \"code\",\r\n    dt.longname \"name\"\r\nfrom fc_doctype dt\r\nwhere nvl(dt.arcfl,'0') = '0'"
            },
            "script": {
                "params": []
            }
        },
        "getClientFactorings": {
            "sql": {},
            "script": {
                "py": "SQL = \"\"\"\nselect\n    f.dep_id \"dep_id\",\n    f.id \"id\",\n    f.code \"code\",\n    d.fromdate \"fromDate\",\n    d.todate \"toDate\",\n    f.termdate \"termDate\",\n    dc.code \"productCode\",\n    dc.longname \"productName\",\n    T_pkgVal.fGetCode(o.val_id) \"currency\"\n\nfrom t_ord o, t_deacls dc, t_dea d, fc_dea f\nwhere d.dep_id=f.dep_id and d.id=f.id\n    and (d.cli_dep_id, d.cli_id)=(select dep_id, id from g_cli where code=:clientCode)\n    and dc.id=d.dcl_id\n    and o.dep_id=f.dep_id and o.id=f.id\n\"\"\"\n\nfrom apng_core.db import fetchall\n\ndata = []\n\nwith initDbSession(application='colvir_cbs').cursor() as cur:\n    p = {\n        'clientCode': parameters['clientCode']\n    }\n    cur.execute(SQL, p)\n    \n    data = fetchall(cur)\n"
            }
        },
        "getFactoringDebtors": {
            "sql": {},
            "script": {
                "py": "SQL=\"\"\"\nselect \n    --fcli.id as deb_Id,\n    --fcli.dea_dep_id, \n    --fcli.dea_id,\n    --fcli.cli_dep_id, \n    --fcli.cli_id,\n    g_pkgcli.fGetCliCode(fcli.cli_dep_id, fcli.cli_id) \"code\",\n    g_pkgcli.fgetclilongname(fcli.cli_dep_id, fcli.cli_id) \"name\"\n    --g_pkgcli.fGetJURFLCli(fcli.cli_dep_id, fcli.cli_id) cli_JurFl,\n    --substr(to_money(fcli.amount),1,27) as amount,\n    --fcli.limtype_id,\n    --fcli.val_id,\n    --substr(T_pkgVal.fGetCode(fcli.val_id),1,3) as val_code,\n    --BS_DOM.DLongName('LLINE_LIM_TYPE',fcli.limtype_id) as limtype_name             \nfrom fc_deacli fcli\nwhere fcli.dea_dep_id = :DEP_ID and fcli.dea_id = :ID\n\"\"\"\nfrom apng_core.db import fetchall\nwith initDbSession(application='colvir_cbs').cursor() as cur:\n    p = {\n        'dep_id': parameters['dep_id'],\n        'id': parameters['id']\n    }\n    cur.execute(SQL, p)\n    data = fetchall(cur)\n"
            }
        },
        "getFactoringSupplyContracts": {
            "script": {
                "py": "SQL=\"\"\"\nselect\n    --fcli.id as DEB_ID,\n    --fcli.dea_dep_id, \n    --fcli.dea_id,\n    --fcli.cli_dep_id,\n    --fcli.cli_id,\n    g_pkgcli.fGetCliCode(fcli.cli_dep_id, fcli.cli_id) \"clientCode\",\n    g_pkgcli.fgetclilongname(fcli.cli_dep_id, fcli.cli_id) \"clientName\",\n    fctr.ctr_id \"contractId\",\n    --fctr.nord,\n    fctr.code \"code\",\n    --fctr.bnkcode \"code\",\n    fctr.dreg \"registrationDate\",\n    fctr.end_date \"endDate\",\n    --fctr.limtype_id,       \n    --BS_DOM.DLongName('LLINE_LIM_TYPE',fctr.limtype_id) as limtype_name,             \n    fctr.amount \"amount\",\n    --fctr.val_id,\n    T_pkgVal.fGetCode(fctr.val_id) \"currency\",\n    --T_pkgVal.fGetLongName(fctr.val_id) as val_name,\n    fctr.pay_delay \"defermentDays\"\n    --fctr.work_day as typeDelay,\n    --BS_DOM.DLongName('FC_WORK_DAY',fctr.work_day) as typeDelay_name,  \n    --fctr.delay_cond \nfrom fc_delivctr fctr, fc_deacli fcli\nwhere fctr.dbt_id = fcli.id\n    and fcli.dea_dep_id = :DEP_ID and fcli.dea_id = :ID\n    and (fcli.cli_dep_id, fcli.cli_id)=(select dep_id, id from g_cli where code=:debtorCode)\norder by nord\n\"\"\"\nfrom apng_core.db import fetchall\nwith initDbSession(application='colvir_cbs').cursor() as cur:\n    p = {\n        'dep_id': parameters['dep_id'],\n        'id': parameters['id'],\n        'debtorCode': parameters['debtorCode'],\n    }\n    cur.execute(SQL, p)\n    data = fetchall(cur)\n"
            },
            "sql": {}
        },
        "createFoundationDocument": {
            "script": {
                "py": "SQL=\"\"\"\ndeclare\n    r L_REQDEA%%rowtype;\n    idDeaDep number;\n    idDea number;\n    idDocType number;\nbegin\n    t_log.penable; t_log.clean;\n    \n    select * into r from L_REQDEA where DEP_ID=:req_dep_id and ID=:req_id;\n    \n    idDeaDep := :req_dep_id;\n    \n    select id into idDocType from fc_doctype where code=json_value(r.json, '$.app.foundationDocument.type');\n    \n    FC_BSREG.pSave(\n        pDepId      => idDeaDep,\n        pId         => idDea,\n        pCtrId      => json_value(r.json, '$.app.supplyContract.contractId'),\n        pDocTypeId  => idDocType,\n        pCode       => json_value(r.json, '$.app.foundationDocument.number'),\n        pDord       => to_date(substr(json_value(r.json, '$.app.foundationDocument.date'),1,10), 'yyyy-mm-dd'),\n        pAmount     => json_value(r.json, '$.app.foundationDocument.amount'),\n        pValId      => T_PkgVal.fValCode2Id(json_value(r.json, '$.app.currency')),\n        pPrim       => null,\n        pAddAttr    => null,\n        pImpFl      => null,\n        nParentProc => null,\n        nParentOpr  => null,\n        sStatCode   => null\n    );\n    \n    T_PkgRunOprUtl.pRunOprByMainOrd(idDeaDep, idDea, 'TOREG', 'REGAMOUNTCON=>'||json_value(r.json, '$.app.foundationDocument.amountOfConcession'));\n    \n    :fd_dep_id  := idDeaDep;\n    :fd_id      := idDea;\n\nend;\n\"\"\"\n\nwith initDbSession(application='colvir_cbs').cursor() as cur:\n    p = {\n        'req_dep_id': parameters['req_dep_id'],\n        'req_id': parameters['req_id'],\n        'fd_dep_id': cur.var(int),\n        'fd_id': cur.var(int),\n    }\n    cur.execute(SQL, p)\n    \n    data = {\n        'fd_dep_id': p['fd_dep_id'].getvalue(),\n        'fd_id': p['fd_id'].getvalue(),\n    }\n\n#raise UserException('stop createFoundationDocument')\n"
            },
            "sql": {}
        },
        "createFactoringClaim": {
            "script": {
                "py": "SQL=\"\"\"\ndeclare\n    r L_REQDEA%%rowtype;\n    invparams varchar2(4000);\n    outParams c_PkgStr.TPrmTBlLst;\nbegin\n    t_log.penable; t_log.clean;\n    \n    select * into r from L_REQDEA where DEP_ID=:req_dep_id and ID=:req_id;\n\n    invparams := \n        'INV_DCL_CODE=>'||json_value(r.json, '$.app.productCode')||\n        ',INV_DREG=>'||to_date(substr(json_value(r.json, '$.app.registrationDate'),1,10), 'yyyy-mm-dd')||\n        ',INV_TODATE=>'||(p_operday+to_number(json_value(r.json, '$.app.supplyContract.defermentDays')))||\n        ',INV_VALCODE=>'||json_value(r.json, '$.app.currency')||\n        ',INV_AMOUNT=>'''||json_value(r.json, '$.app.foundationDocument.amountOfConcession')||''''||\n        ',CTR_ID=>'||json_value(r.json, '$.app.supplyContract.contractId')||\n        ',INV_PAYDATE=>'||\n        ',INV_PAYDELAY=>'||json_value(r.json, '$.app.supplyContract.defermentDays')||\n        ',LIST_REGS=>''' || :fd_dep_id || ',' || :fd_id ||''''\n    ;\n    --raise_application_error(-20000, invparams);\n    \n    outParams := T_PkgRunOprUtl.fRunOprByMainOrd(\n        json_value(r.json, '$.app.factoring.dep_id'), \n        json_value(r.json, '$.app.factoring.id'),\n        'INVOICE_CRE', \n        invparams\n    );\n    \n    :dep_id := C_PkgStr.fGetPrmVal(outParams, 'INV_DEP_ID');\n    :id := C_PkgStr.fGetPrmVal(outParams, 'INV_ID');\n    \n    --raise_application_error(-20000, ''||:dep_id||','||:id);\n    \n    select code into :code from t_ord where dep_id=:dep_id and id=:id;\n    \nend;\n\"\"\"\n\nfrom colvir_cbs.services import log\nwith initDbSession(application='colvir_cbs').cursor() as cur:\n    p = {\n        'req_dep_id': parameters['req_dep_id'],\n        'req_id': parameters['req_id'],\n        'fd_dep_id': parameters['fd_dep_id'],\n        'fd_id': parameters['fd_id'],\n        'dep_id': cur.var(int),\n        'id': cur.var(int),\n        'code': cur.var(str),\n    }\n    try:\n        cur.execute(SQL, p)\n    except Exception as e:\n        raise UserException({\n            'message': 'Ошибка создания требования по факторингу\\n%s' % e,\n            'trace': log.readLog()\n        })\n\n    data = {\n        'dep_id': p['dep_id'].getvalue(),\n        'id': p['id'].getvalue(),\n        'code': p['code'].getvalue(),\n        'log': log.readLog()\n    }\n\n#raise UserException('stop createFactoringClaim')\n"
            },
            "sql": {}
        },
        "prepareMonetaryClaim": {
            "sql": {},
            "script": {
                "py": "#\n# Подготовка атрибутов заявки на денежное требование\n#\napp = parameters['app']\n\n\nfactoring = app['app'].get('factoring')\nif factoring is None or factoring.get('dep_id') is None or factoring.get('id') is None:\n    raise UserException('Не определен договор факторинга')\n\nfactoringApp = AO.appFactoring.getFactoringApplication(dep_id=factoring['dep_id'], id=factoring['id'])\n\n#\n# Копируем значения из заявки на факторинг\n#\ndata = {**app}\ndata['client']['clientType'] = factoringApp['client'].get('clientType')\ndata['client']['clientTypeName'] = factoringApp['client'].get('clientTypeName')\ndata['client']['companyClass'] = factoringApp['client'].get('companyClass')\n\n#\n# Подстановка метода расчета срока\n#\ndata['product']['options']['durationMethod'] = 'appFactoring.calcMonetaryClaimDuration'\n"
            }
        },
        "getFactoringApplication": {
            "script": {
                "py": "\nfrom apng_core.db import fetchone\nwith initDbSession(application='colvir_cbs').cursor() as c:\n    c.execute(\"\"\"\n        select\n            T_PkgDeaPrm.fDeaParByCode(f.ID, f.DEP_ID, 'L_UNNUMBER') \"appId\"\n        from fc_dea f\n        where f.dep_id=:dep_id and f.id=:id\n    \"\"\", {\n        'dep_id': parameters['dep_id'],\n        'id': parameters['id']\n    })\n    \n    factoring = fetchone(c)\n    \n    if factoring is None or factoring['appId'] is None:\n        raise UserException('Договор факторинга не связан с заявкой')\n    \n    data = AO.app.getApplication(appId=factoring['appId'])\n    \n    if data is None:\n        raise UserException('Заявка id: {appId} к договору факторинга не существует')\n\n"
            },
            "sql": {}
        },
        "calcMonetaryClaimDuration": {
            "script": {
                "py": "#\n#  Расчет срока для ГРКИ/АСОКИ\n#\nfrom datetime import datetime\napp = parameters['app']\n\n\"\"\"\nd1 = datetime.fromisoformat(app['app']['registrationDate']).date()\nd2 = datetime.fromisoformat(app['app']['factoring']['toDate']).date()\ndur = d2 - d1\n\ndata = '{}.{}'.format(dur.days//30, dur.days-(dur.days//30)*30)\n\"\"\"\n\ndays = app['app']['supplyContract']['defermentDays']\ndata = '{}.{}'.format(days//30, days-(days//30)*30)\n"
            },
            "sql": {}
        }
    },
    "lists": {},
    "references": {
        "foundationDocument": {
            "form": {
                "style": {
                    "width": "700px",
                    "height": "400px"
                },
                "columns": [
                    {
                        "title": "Код",
                        "field": "code",
                        "width": 100,
                        "hide": false
                    },
                    {
                        "title": "Наименование",
                        "field": "name",
                        "flex": 1
                    }
                ],
                "primaryKey": "code"
            },
            "method": {
                "sql": {
                    "sqlType": "query",
                    "database": "colvir_cbs",
                    "sql": "select \n    dt.code \"code\",\n    dt.longname \"name\"\nfrom fc_doctype dt\norder by CODE asc \n "
                }
            }
        }
    },
    "js": {}
}