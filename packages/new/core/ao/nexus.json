{
    "forms": {
        "componentsForm": {
            "title": "Компоненты Nexus",
            "style": {
                "height": "100%"
            },
            "$": {
                "@c": {
                    "title": "Доступные версии в хранилище",
                    "className": "vertical",
                    "style": {
                        "height": "100%"
                    },
                    "$": {
                        ".ap": {
                            "control": "ActionPanel",
                            "controlOpts": {
                                "actions": [
                                    {
                                        "title": "Обновить",
                                        "icon": "refresh",
                                        "mini": true,
                                        "action": {
                                            "js": "task.events.fireEvent('onRefreshComponents');"
                                        }
                                    },
                                    {
                                        "title": "Установить",
                                        "action": {
                                            "name": "onInstallImage",
                                            "params": {
                                                "image$": "context.selectedImage"
                                            }
                                        },
                                        "disabled$": "!context.selectedImage"
                                    }
                                ]
                            }
                        },
                        ".components": {
                            "style": {
                                "flexGrow": 1
                            },
                            "control": "ListTable",
                            "controlOpts": {
                                "rowModelType": "infinite",
                                "id": "id",
                                "refreshEvent": "onRefreshComponents",
                                "columns!": {
                                    "version": {
                                        "label": "Версия",
                                        "width": 90
                                    },
                                    "date": {
                                        "label": "Дата",
                                        "getter": "data?.assets?.[0]?.lastModified",
                                        "format": "datetime"
                                    }
                                }
                            },
                            "controlProps": {
                                "style": {
                                    "height": "100%"
                                },
                                "gridOptions": {
                                    "domLayout": "normal"
                                }
                            },
                            "actions": {
                                "onGetRows": {
                                    "js": "backend.post('/aoa/execObjectMethod', {object: 'nexus', method: 'search'}).then((r)=>{onSuccess(r.items)})"
                                }
                            }
                        }
                    },
                    "actions": {
                        "onSelectionChanged": {
                            "js": "context.selectedImage=selectedRow;"
                        }
                    }
                }
            }
        }
    },
    "methods": {
        "nexus": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "import requests\nimport urllib\nimport base64\nimport traceback\n\nclass Nexus:\n    def __init__(self, url, user, password):\n        if not url:\n            raise UserException('Не задан адрес репозитория nexus, url')\n\n        if not user:\n            raise UserException('Не задан пользователь репозитория nexus, user')\n\n        if not password:\n            raise UserException('Не задан пароль пользователя репозитория nexus, password')\n\n        self.url = url+'/service/rest/v1'\n        self.user = user\n        self.password = password\n    \n    def __enter__(self):\n        return self\n    \n    def __exit__(self, type, value, traceback):\n        pass    \n    \n    def search(self, params):\n        from requests.auth import HTTPBasicAuth\n        auth = HTTPBasicAuth(self.user, self.password)\n        sp = urllib.parse.urlencode(params)\n        \n        url_path = self.url + '/search?'+sp\n        headers = {\n            'Authorization': 'Basic ' + base64.b64encode(bytes(self.user+':'+self.password, 'ascii')).decode('ascii')\n        }\n        \n        try:\n            response = requests.get(\n                url_path,\n                verify=False,\n                auth=auth\n            )\n        except requests.exceptions.ConnectionError as e:\n            raise UserException({\n                'message': 'Ошибка подключения к %s\\n%s' % (url_path, e),\n                'trace': traceback.format_exc()\n            })\n        \n        if response.status_code != 200:\n            print(url_path)\n            raise Exception('%s: %s' % (response.status_code, response.text))\n            \n        return json.loads(response.content)\n\n    \ndata = Nexus(parameters.get('url'), parameters.get('user'), parameters.get('password'))\n\n"
            }
        },
        "search": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "from django.conf import settings\nfrom beflex.aoa.services import execObjectMethod\n\nif not hasattr(settings, 'CIDI') or settings.CIDI.get('NEXUS') is None:\n    raise UserException('Не настроена интеграция с NEXUS, CIDI.NEXUS')\n    \nnexus = settings.CIDI['NEXUS']\n\n#nparams = {\n#    'url': 'https://nexus.colvir.ru',\n#    'user': 'kmatveyonok',\n#    'password': 'vortex105.A'\n#}\n\nwith execObjectMethod({'object': 'nexus', 'method': 'nexus', 'params': nexus}) as n:\n    data = n.search(\n        {\n            'repository': nexus.get('repository'),\n            'name': nexus.get('name'),\n            'sort': 'version'\n        }\n        #{\n        #    'repository': 'registry',\n        #    'name': 'apng-39',\n        #    'sort': 'version'\n        #}        \n    )"
            }
        }
    },
    "reference": {
        "method": {}
    }
}