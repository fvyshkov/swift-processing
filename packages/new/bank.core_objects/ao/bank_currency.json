{
    "forms": {},
    "methods": {
        "getCurrencyInfo": {
            "sql": {},
            "script": {
                "py": "from apng_core.db import fetchone\n\ndef getCurrencyInfo(params):\n    \n    with initDbSession(application='colvir_cbs').cursor() as cursor:\n        p = {\n            'code': params.get('code'),\n        }\n        \n        cursor.execute(\"\"\"\n            select * from T_VAL where code=:code\n        \"\"\", p)\n        \n        d = fetchone(cursor)\n        \n        if d:\n            return {\n                'code': d['CODE'],\n                'name': d['LONGNAME']\n            }\n        \n    return None\n"
            }
        },
        "crossrate": {
            "script": {
                "py": "def crossrate(params):\n    with initDbSession(application='bank').cursor() as cursor:\n        p = {\n            'fromAmount': params.get('fromAmount'),\n            'fromCurrency': params.get('fromCurrency'),\n            'convertedAmount': cursor.var(float)\n        }\n\n        cursor.execute(\"\"\"\n            begin\n                :convertedAmount := T_PkgVal.fCrossRate(\n                    nSum => :fromAmount,\n                    nValId1 => T_PkgVal.fValCode2Id(:fromCurrency),\n                    nValId2 => P_NATVAL,\n                    p_Date => P_OPERDAY, \n                    iRnd => 1\n                );\n            end;\n        /\"\"\", p)\n\n    return p['convertedAmount'].getvalue()\n\ndata = crossrate(parameters)"
            },
            "sql": {}
        },
        "currencyInWords": {
            "sql": {},
            "script": {
                "py": "def currencyInWords(params):\n    \n    with initDbSession(application='bank').cursor() as cursor:\n        p = {\n            'amount': params.get('amount'),\n            'currency': params.get('currency'),\n            'language': params.get('language'),\n            'amountWords': cursor.var(str),\n        }\n        \n        cursor.execute(\"\"\"\n            declare\n            begin\n                :amountWords := t_pkgmoney.fTrnMoneyToWordVal(\n                    money       => :amount, \n                    Val_id      => t_pkgval.fValCode2Id(:currency),\n                    iLng        => C_PkgLngDict.fLNGID(:language)\n                );\n            end;\n        \"\"\", p)\n        \n        d = p['amountWords'].getvalue()\n        \n    return d\n\ndata = currencyInWords(parameters)"
            }
        }
    },
    "references": {
        "default": {
            "form": {
                "style": {
                    "width": "800px"
                },
                "columns": [
                    {
                        "title": "Код",
                        "field": "code",
                        "width": 100
                    },
                    {
                        "title": "Наименование",
                        "field": "name",
                        "flex": 1
                    }
                ],
                "id": "code",
                "primaryKey": "code"
            },
            "method": {
                "sql": {
                    "params": [
                        "code",
                        "isLoan",
                        "isJur"
                    ],
                    "sqlType": "query",
                    "database": "bank",
                    "sql": "select\n    v.code \"code\",\n    v.longname \"name\"\nfrom T_VAL v\nwhere nvl(:code, v.code) = v.code\n    and v.arcfl=0\n    and v.activfl=1\n    and (nvl(:isLoan, 0)=0\n        or\n        nvl(:isLoan, 0)=1 and\n        id=any(\n            select val_id \n            from T_VALDEPCLS t, T_DEACLS_STD d \n            where d.id=t.dcl_id and d.ARCFL=0 \n                and NVL(T_PkgDeaPrm.fClsParByCode(d.id, 'OPEN_JUR'),0) = nvl(:isJur, 0) \n                and d.bop_id+0=any(select ID from T_BOP_DSCR_STD where code in ('CS_CRED', 'CS_CR_LIN'))\n        )\n    )\norder by v.code"
                },
                "script": {
                    "params": []
                }
            }
        }
    },
    "lists": {},
    "js": {}
}