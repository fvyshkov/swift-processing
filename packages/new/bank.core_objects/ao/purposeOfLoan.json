{
    "forms": {
        "purposeListForm": {
            "title": "Список целей использования",
            "className": "horizontal",
            "$": {
                ".list": {
                    "style": {
                        "width": "660px"
                    },
                    "control": "ListTable",
                    "controlOpts": {
                        "$": {
                            "name": {
                                "label": "Цель кредита",
                                "flex": 1,
                                "cellStyle": {
                                    "whiteSpace": "normal !important",
                                    "lineHeight": 1.2,
                                    "display": "flex",
                                    "alignItems": "center"
                                },
                                "compact": true
                            }
                        }
                    },
                    "controlProps": {
                        "gridOptions": {
                            "headerHeight": 0
                        }
                    }
                },
                "btnSelect": {
                    "label": "Выбрать",
                    "control": "Button",
                    "controlProps": {
                        "color": "primary"
                    },
                    "action": {
                        "js": "backend.post('/aoa/execObjectMethod', {object: 'purposeOfLoan', method: 'getItemList', params: {productCode: params.productCode}}, {useCache: true}).then((r)=>frontend.dialog({object: 'purposeOfLoan', form: 'selectPurposesDialog', mem: {purposes: r.map((s)=>({...s, selected: !!mem.find((i)=>i.code==s.code)}))}}));"
                    }
                }
            },
            "actions": {
                "closeDialog": {
                    "jsScript": "dialog.actions.close();"
                },
                "applyDialog": {
                    "jsScript": "mem.splice(0, mem.length, ...dialog.mem.purposes.filter((s)=>s.selected)); dialog.actions.close();"
                }
            }
        },
        "selectPurposesDialog": {
            "title": "Выбор целей кредита",
            "className": "vertical",
            "style": {
                "overflow": "hidden",
                "width": "800px"
            },
            "$": {
                "@fields": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "8px",
                        "overflowY": "auto"
                    },
                    "$": {
                        "|purposes": {
                            "control": "ListTable",
                            "controlOpts": {
                                "$": {
                                    "selected": {
                                        "label": "Выбран",
                                        "width": 100,
                                        "control": "checkbox"
                                    },
                                    "name": {
                                        "label": "Цель кредита",
                                        "flex": 1,
                                        "cellStyle": {
                                            "whiteSpace": "normal !important",
                                            "lineHeight": 1.2,
                                            "display": "flex",
                                            "alignItems": "center"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "end"
                    },
                    "$": {
                        "btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "variant": "text",
                                "color": "primary"
                            },
                            "action": {
                                "name": "closeDialog"
                            }
                        },
                        "btnApply": {
                            "label": "Выбрать",
                            "control": "Button",
                            "controlProps": {
                                "variant": "contained",
                                "color": "primary"
                            },
                            "action": {
                                "name": "applyDialog"
                            }
                        }
                    }
                }
            }
        }
    },
    "methods": {
        "getItemList": {
            "sql": {
                "params": [
                    "productCode"
                ],
                "sqlType": "query",
                "sql": "select\n    c.CODE \"code\",\n    c.LONGNAME \"name\"\nfrom l_purdsc c\nwhere c.arcfl='0' and c.groupfl='0'\n    and (:productCode is null \n        or :productCode is not null\n            and exists (select 1 from l_deapur dp, t_deacls_std dc where dp.dcl_id=dc.id and dp.pur_id=c.id and dc.code=:productCode)\n        )\norder by c.code\n",
                "database": "bank"
            },
            "script": {
                "params": []
            }
        },
        "getPurposeOfLoanInfo": {
            "sql": {},
            "script": {
                "py": "def getPurposeOfLoanInfo(params):\n    from apng_core.db import fetchone\n    with initDbSession(application='bank').cursor() as cursor:\n        \n        p = {\n            'code': params.get('code'),\n            'language': params.get('language'),\n        }\n        \n        cursor.execute(\"\"\"\n            select\n                d.code, \n                nvl(l.longname, d.longname) longname\n            from l_purdsc_lng l, l_purdsc_std d  \n            where code=:code\n                and l.id(+)=d.id and l.lng_id(+)=nvl(C_PkgLngDict.fLNGID(:language), p_lng)\n        \"\"\", p)\n        \n        d = fetchone(cursor)\n        \n    if d:\n        return {\n            'code': d['CODE'],\n            'name': d['LONGNAME'],\n        }\n        \n    return None\n\ndata = getPurposeOfLoanInfo(parameters)"
            }
        }
    },
    "references": {
        "default": {
            "form": {
                "style": {
                    "width": "1000px",
                    "height": "600px"
                },
                "columns": [
                    {
                        "title": "Код",
                        "field": "code",
                        "width": 320
                    },
                    {
                        "title": "Наименование",
                        "field": "name",
                        "flex": 1
                    }
                ],
                "fastFilter": true,
                "id": "code",
                "primaryKey": "code",
                "parentKey": "parentCode",
                "isGroup": "item.groupFl=='1'",
                "isSelectable": "node.data.groupFl!='1'"
            },
            "method": {
                "sql": {
                    "sqlType": "query",
                    "database": "bank",
                    "params": [
                        "parentCode",
                        "productCode",
                        "isJur",
                        "request"
                    ],
                    "sql": "select\r\n    :request xxx,\r\n    c.CODE \"code\", \r\n    c.LONGNAME \"name\", \r\n    p.code \"parentCode\",\r\n    c.groupfl \"groupFl\"\r\nfrom l_purdsc c, l_purdsc_std p \r\nwhere c.id_hi=p.id(+) \r\n    and (\r\n        json_value(:request, '$.filterModel.code.filter') is null \r\n            and json_value(:request, '$.filterModel.name.filter') is null\r\n            and :parentCode is null and c.id_hi is null or :parentCode=p.code\r\n        or\r\n        json_value(:request, '$.filterModel.code.filter') is not null \r\n            and c.code like '%%'||json_value(:request, '$.filterModel.code.filter')||'%%'\r\n            and c.groupfl=0\r\n        or\r\n        json_value(:request, '$.filterModel.name.filter') is not null \r\n            and upper(c.longname) like '%%'||upper(json_value(:request, '$.filterModel.name.filter'))||'%%'\r\n            and c.groupfl=0\r\n    ) \r\n    and (:productCode is null or :productCode is not null \r\n            and exists(\r\n                select id from l_purdsc_std pd\r\n                where pd.id=c.id \r\n                start with pd.id=any(\r\n                  select dp.pur_id from l_deapur dp, t_deacls_std dc \r\n                  where dp.DCL_ID=dc.id \r\n                    and dc.code=:productCode) \r\n                  connect by prior pd.id_hi =  pd.id\r\n            )\r\n        )\r\n    and (:isJur is null or :isJur is not null\r\n            and exists(\r\n                select id from l_purdsc_std pp\r\n                where pp.id=c.id\r\n                start with pp.id=any(\r\n                    select dp.pur_id from l_deapur dp, t_deacls_std dc\r\n                    where dp.dcl_id=dc.id\r\n                        and dc.arcfl='0'\r\n                        and NVL(T_PkgDeaPrm.fClsParByCode(dc.id, 'OPEN_JUR'), :isJur) = :isJur\r\n                        and dc.bop_id + 0 in (Bs_Bop.fGetBopID('CS_CRED'),Bs_Bop.fGetBopID('CS_CR_LIN'))\r\n                )\r\n                connect by  pp.id= prior pp.id_hi\r\n                \r\n            )\r\n    )\r\n\r\norder by c.code\r\n"
                },
                "script": {
                    "params": []
                }
            }
        }
    },
    "lists": {},
    "js": {}
}