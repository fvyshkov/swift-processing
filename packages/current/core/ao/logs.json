{
    "forms": {
        "logRecordTask": {
            "title": "Просмотр записи журнала",
            "className": "vertical task task-panel",
            "style": {
                "height": "100%",
                "overflow": "hidden"
            },
            "$": {
                "@form": {
                    "style": {
                        "padding": "4px",
                        "height": "100%"
                    },
                    "object": "logs",
                    "form": "logRecordForm"
                }
            },
            "actions": {
                "onTaskCreated": {
                    "js": "task.params.id && backend.post('/aoa/execObjectMethod', {object: 'logs', method: 'get', params: {id: task.params.id}}).then((r)=>{mem.record=r; forceUpdate()})"
                }
            }
        },
        "logRecordForm": {
            "title": "Просмотр записи журнала",
            "style": {
                "height": "100%"
            },
            "$": {
                "record": {
                    "className": "vertical",
                    "style": {
                        "height": "100%"
                    },
                    "$": {
                        "created": {
                            "label": "Дата",
                            "style": {
                                "width": "260px"
                            },
                            "control": "TextEdit",
                            "getter": "formatters.datetimesec(mem.created)"
                        },
                        "logger": {
                            "label": "Логер",
                            "style": {
                                "width": "260px"
                            },
                            "control": "TextEdit"
                        },
                        "level": {
                            "label": "Уровень",
                            "style": {
                                "width": "260px"
                            },
                            "control": "TextEdit"
                        },
                        "msg": {
                            "label": "Сообщение",
                            "style": {
                                "flex": 1
                            },
                            "control": "TextEdit",
                            "controlProps": {
                                "style": {
                                    "height": "100%"
                                },
                                "multiline": true,
                                "minRows": 10,
                                "InputProps": {
                                    "style": {
                                        "height": "100%"
                                    }
                                },
                                "inputProps": {
                                    "style": {
                                        "height": "100%"
                                    }
                                }
                            }
                        }
                    },
                    "readOnly": true
                }
            }
        }
    },
    "methods": {
        "testRecords": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "import logging\nfrom django.db import transaction\n\nfrom colvir_web import *\n\nlg = logging.getLogger('apl')\n\nlg.debug('debug')\n\ntry:\n    raise Exception('regular exception')\nexcept Exception as e:\n    lg.exception(e)\n    \ntry:\n    raise UserException('user exception')\nexcept Exception as e:\n    lg.exception(e)\n    \ntry:\n    with transaction.atomic():\n        lg.debug('in transaction')\n        raise Exception('abort trasaction')\nexcept:\n    pass\n\n"
            }
        },
        "getList": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "\nfrom apng_core.logger.dblogger.models import Record\nfrom apng_core.aoa.services.filter import applyFilterModel, applyFilterModel2\nfrom datetime import datetime\nfrom django.utils.timezone import make_aware\n\ndef parseDT(s):\n    return make_aware(datetime.strptime(s, '%d.%m.%Y %H:%M:%S'))\n\nquery = Record.objects\n\nfilterModel2 = parameters.get('request', {}).get('filterModel2')\nif filterModel2:\n    \n    if 'fromDate' in filterModel2:\n        query = query.filter(created__gte = parseDT(filterModel2['fromDate']))\n        del filterModel2['fromDate']\n\n    if 'toDate' in filterModel2:\n        query = query.filter(created__lt = parseDT(filterModel2['toDate']))\n        del filterModel2['toDate']\n    \n    if len(filterModel2)>0:\n        query = applyFilterModel2(query, filterModel2)\n\nquery = query.order_by('-created')\n\n\nif parameters.get('request', {}).get('startRow') is not None:\n    query = query[parameters['request']['startRow']:parameters['request']['endRow']]\n\n\n\ndata = []\nfor r in query:\n    data.append({\n        'id': r.id,\n        'created': r.created,\n        'logger': r.logger,\n        'level': r.level,\n        'msg': r.msg[:4000],\n    })"
            }
        },
        "get": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "from apng_core.logger.dblogger.models import Record\n\nr = Record.objects.get(id=parameters['id'])\n\ndata = {\n    'created': r.created,\n    'logger': r.logger,\n    'level': r.level,\n    'msg': r.msg\n}"
            }
        },
        "getLoggers": {
            "sql": {
                "params": []
            },
            "script": {
                "params": [],
                "py": "data = []\nfrom django.conf import settings\n\nloggers = settings.LOGGING['loggers']\nfor logger_name in loggers.keys():\n    if 'apl' in loggers[logger_name].get('handlers'):\n        data.append({\n            'logger': logger_name\n        })\n"
            }
        }
    },
    "lists": {
        "default": {
            "id": "id",
            "columns": {
                "created": {
                    "title": "Время",
                    "width": 150,
                    "format": "datetimesec"
                },
                "logger": {
                    "title": "Логер",
                    "width": 140
                },
                "msg": {
                    "title": "Сообщение",
                    "flex": 1,
                    "cellStyle": {
                        "whiteSpace": "normal !important",
                        "lineHeight": 1.2,
                        "display": "flex",
                        "alignItems": "center"
                    }
                }
            },
            "getRowStyle": "data && data.level >= 30 && {color: 'rgb(235, 87, 87)'}",
            "actions": [
                {
                    "title": "Обновить",
                    "icon": "refresh",
                    "mini": true,
                    "command": {
                        "type": "standard",
                        "call": "refresh"
                    }
                },
                {
                    "title": "Открыть",
                    "icon": "view",
                    "mini": true,
                    "command": {
                        "type": "task",
                        "call": "/aoa/ObjectTask",
                        "title$": "`Журнальная запись ${$listRow.created}`",
                        "params": {
                            "object": "logs",
                            "form": "logRecordTask",
                            "id$": "$listRow.id"
                        }
                    },
                    "disabled": "!$listRow"
                }
            ],
            "filter": {
                "form": {
                    "style": {
                        "width": "360px",
                        "overflow": "hidden",
                        "paddingRight": "0px"
                    },
                    "title": "Фильтр",
                    "className": "panel vertical",
                    "$": {
                        "@fields": {
                            "className": "vertical",
                            "style": {
                                "paddingTop": "8px",
                                "paddingRight": "8px",
                                "overflowY": "auto",
                                "flexGrow": 1
                            },
                            "$": {
                                "@fromDate": {
                                    "className": "horizontal",
                                    "$": {
                                        "fromDate": {
                                            "label": "Дата с",
                                            "control": "TextEdit",
                                            "controlProps": {
                                                "masked": {
                                                    "mask": [
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ".",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ".",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        " ",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ":",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ":",
                                                        "/\\d/",
                                                        "/\\d/"
                                                    ],
                                                    "placeholderChar": "_",
                                                    "showMask": true,
                                                    "guide": true,
                                                    "keepCharPositions": true
                                                }
                                            },
                                            "controlOpts": {
                                                "toValue": "(params.value||'').match(/\\d+/g) && params.value || ''"
                                            }
                                        },
                                        ".btnNow": {
                                            "control": "IconButton",
                                            "controlProps": {
                                                "icon": "time",
                                                "style": {
                                                    "paddingTop": "6px"
                                                }
                                            },
                                            "action": {
                                                "name": "setNow"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "setNow": {
                                            "js": " let d = new Date(); mem.fromDate = ('0'+d.getDate()).slice(-2) + '.' + ('0'+(d.getMonth()+1)).slice(-2) + '.' + d.getFullYear()+ ' ' + ('0' + d.getHours()).slice(-2) + ':' + ('0' + d.getMinutes()).slice(-2) + ':' + ('0'+d.getSeconds()).slice(-2);"
                                        }
                                    }
                                },
                                "@todate": {
                                    "className": "horizontal",
                                    "$": {
                                        "toDate": {
                                            "label": "Дата по",
                                            "control": "TextEdit",
                                            "controlProps": {
                                                "masked": {
                                                    "mask": [
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ".",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ".",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        " ",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ":",
                                                        "/\\d/",
                                                        "/\\d/",
                                                        ":",
                                                        "/\\d/",
                                                        "/\\d/"
                                                    ],
                                                    "placeholderChar": "_",
                                                    "showMask": true,
                                                    "guide": true,
                                                    "keepCharPositions": true
                                                }
                                            },
                                            "controlOpts": {
                                                "toValue": "(params.value||'').match(/\\d+/g) && params.value || ''"
                                            }
                                        },
                                        ".btnNow": {
                                            "control": "IconButton",
                                            "controlProps": {
                                                "icon": "time",
                                                "style": {
                                                    "paddingTop": "6px"
                                                }
                                            },
                                            "action": {
                                                "name": "setNow"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "setNow": {
                                            "js": " let d = new Date(); mem.toDate = ('0'+d.getDate()).slice(-2) + '.' + ('0'+(d.getMonth()+1)).slice(-2) + '.' + d.getFullYear()+ ' ' + ('0' + d.getHours()).slice(-2) + ':' + ('0' + d.getMinutes()).slice(-2) + ':' + ('0'+d.getSeconds()).slice(-2);"
                                        }
                                    }
                                },
                                "level": {
                                    "label": "Уровень",
                                    "control": "SelectList",
                                    "controlProps": {
                                        "list": [
                                            {
                                                "value": 10,
                                                "name": "Отладка"
                                            },
                                            {
                                                "value": 20,
                                                "name": "Информационный"
                                            },
                                            {
                                                "value": 30,
                                                "name": "Предупреждения"
                                            },
                                            {
                                                "value": 40,
                                                "name": "Ошибки"
                                            },
                                            {
                                                "value": 50,
                                                "name": "Критические"
                                            }
                                        ]
                                    }
                                },
                                "logger__exact": {
                                    "label": "Логер",
                                    "control": "ObjectSelectList",
                                    "controlProps": {
                                        "object": "logs",
                                        "method": "getLoggers"
                                    },
                                    "controlOpts": {
                                        "translate": {
                                            "value": "logger",
                                            "name": "logger"
                                        }
                                    }
                                },
                                "msg": {
                                    "label": "Содержит",
                                    "control": "TextEdit"
                                }
                            }
                        },
                        "@buttons": {
                            "className": "horizontal",
                            "$": {
                                "btnClear": {
                                    "control": "Button",
                                    "label": "Очистить",
                                    "controlProps": {
                                        "variant": "outlined",
                                        "color": "primary"
                                    },
                                    "action": {
                                        "name": "clean"
                                    }
                                },
                                "btnApply": {
                                    "control": "Button",
                                    "label": "Применить",
                                    "controlProps": {
                                        "variant": "contained",
                                        "color": "primary"
                                    },
                                    "action": {
                                        "js": "actions.apply(mem);",
                                        "params": {
                                            "disableUpdate": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "clean": {
                            "jsScript": "Object.keys(mem).forEach(function(key) { delete mem[key]; });"
                        }
                    }
                }
            }
        }
    },
    "references": {}
}