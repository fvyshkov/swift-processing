{
    "lists": {
        "ruleList": {
            "id": "code",
            "getList": "getRuleList",
            "columns": {
                "code": {
                    "title": "Код",
                    "width": 200
                },
                "name": {
                    "title": "Наименование",
                    "flex": 1
                }
            },
            "actions": [
                {
                    "title": "Обновить",
                    "icon": "refresh",
                    "mini": true,
                    "command": {
                        "type": "standard",
                        "call": "refresh"
                    }
                },
                {
                    "title": "Создать",
                    "icon": "add",
                    "mini": true,
                    "command": {
                        "type": "task",
                        "call": "/aoa/ObjectTask",
                        "title": "Новое правило",
                        "params": {
                            "object": "rule",
                            "form": "editRuleTask"
                        }
                    }
                },
                {
                    "title": "Открыть",
                    "icon": "view",
                    "mini": true,
                    "command": {
                        "type": "task",
                        "call": "/aoa/ObjectTask",
                        "title$": "`Правило ${$listRow.code}`",
                        "params": {
                            "object": "rule",
                            "form": "editRuleTask",
                            "code$": "$listRow.code"
                        }
                    },
                    "disabled": "!$listRow"
                },
                {
                    "title": "Удалить",
                    "icon": "delete",
                    "mini": "true",
                    "confirm": {
                        "message$": "`Удалить правило ${$listRow.code}, ${$listRow.name} ?`",
                        "yes": "Да",
                        "no": "Нет"
                    },
                    "command": {
                        "type": "standard",
                        "call": "delete"
                    },
                    "disabled": "!$listRow"
                },
                {
                    "title": "Инструменты",
                    "split": true,
                    "actions": [
                        {
                            "title": "Пакеты",
                            "command": {
                                "type": "js",
                                "js": "frontend.dialog({object: 'package', form: 'objectPackageDialog', mem: {}, params: {objectId: $listRow.code, model: 'rule.Rule'}, context: {}})"
                            },
                            "disabled": "!$listRow"
                        },
                        {
                            "title": "История",
                            "command": {
                                "type": "task",
                                "title$": "`История объекта: ${$listRow.code}`",
                                "call": "/aoa/ObjectTask",
                                "params": {
                                    "object": "aos.ModifiedObjects",
                                    "form": "historyTask",
                                    "model": "rule.Rule",
                                    "objectId$": "$listRow.code"
                                }
                            },
                            "disabled": "!$listRow"
                        }
                    ]
                }
            ],
            "filter": {
                "form": {
                    "style": {
                        "width": "360px",
                        "overflow": "hidden",
                        "paddingRight": "0px"
                    },
                    "title": "Фильтр",
                    "className": "panel vertical",
                    "$": {
                        "@fields": {
                            "className": "vertical",
                            "style": {
                                "paddingTop": "8px",
                                "paddingRight": "8px",
                                "overflowY": "auto",
                                "flexGrow": 1
                            },
                            "$": {
                                "code": {
                                    "label": "Код",
                                    "control": "TextEdit"
                                },
                                "name": {
                                    "label": "Нименование",
                                    "control": "TextEdit"
                                }
                            }
                        },
                        "@buttons": {
                            "className": "horizontal",
                            "$": {
                                "btnClear": {
                                    "control": "Button",
                                    "label": "Очистить",
                                    "controlProps": {
                                        "variant": "outlined",
                                        "color": "primary"
                                    },
                                    "action": {
                                        "name": "clean"
                                    }
                                },
                                "btnApply": {
                                    "control": "Button",
                                    "label": "Применить",
                                    "controlProps": {
                                        "variant": "contained",
                                        "color": "primary"
                                    },
                                    "action": {
                                        "js": "actions.apply(mem);",
                                        "params": {
                                            "disableUpdate": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "clean": {
                            "jsScript": "Object.keys(mem).forEach(function(key) { delete mem[key]; });"
                        }
                    }
                }
            }
        }
    },
    "forms": {
        "editRuleTask": {
            "title": "Редактирование правила",
            "className": "vertical task task-panel",
            "style": {
                "height": "100%",
                "overflow": "hidden"
            },
            "$": {
                "@actions": {
                    "style": {
                        "margin": "16px 0px 16px 0px"
                    },
                    "$": {
                        ".ap": {
                            "control": "ActionPanel",
                            "controlOpts": {
                                "actions": [
                                    {
                                        "title": "Сохранить",
                                        "icon": "save",
                                        "mini": false,
                                        "action": {
                                            "name": "saveRule"
                                        },
                                        "disabled$": "!context.modified"
                                    }
                                ]
                            }
                        }
                    }
                },
                "@form": {
                    "style": {
                        "padding": "8px",
                        "overflow": "hidden",
                        "flex": 1
                    },
                    "form": "editRuleForm"
                }
            },
            "actions": {
                "onTaskCreated": {
                    "js": "task.params.code && backend.post('/aoa/execObjectMethod', {object: 'rule', method: 'getRule', params: {code: task.params.code}}).then((r)=>{mem.rule=r; forceUpdate()})"
                },
                "onModified": {
                    "js": "context.modified = true;"
                },
                "saveRule": {
                    "js": "backend.post('/aoa/execObjectMethod', {object: 'rule', method: 'saveRule', params: mem.rule}).then((r)=>{context.modified = false; mem.rule.id=r.id; tm.setTaskTitle(task.key, `Правило ${mem.rule.code}`);})"
                }
            }
        },
        "editRuleForm": {
            "title": "Форма редактирования правила",
            "className": "vertical",
            "$": {
                "rule": {
                    "className": "vertical",
                    "$": {
                        ".tabs": {
                            "control": "Tabs",
                            "style": {
                                "height": "100%",
                                "overfow": "hidden",
                                "display": "flex",
                                "flexDirection": "column"
                            },
                            "controlProps": {
                                "variant": "standard",
                                "context$": "(()=>{if (!context.taskTabs){context.taskTabs={};} return context.taskTabs})()",
                                "style": {
                                    "marginBottom": "8px"
                                },
                                "pages": {
                                    "common": {
                                        "title": "Правило",
                                        "$": {
                                            "@form": {
                                                "object": "rule",
                                                "form": "commonForm"
                                            }
                                        }
                                    },
                                    "conditions": {
                                        "title": "Условия",
                                        "$": {
                                            "@condition": {
                                                "object": "rule",
                                                "form": "conditionsForm"
                                            }
                                        }
                                    },
                                    "tests": {
                                        "title": "Тесты",
                                        "$": {
                                            "@tests": {
                                                "object": "rule",
                                                "form": "testsForm"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "editConditionDialog": {
            "title": "Редактирование праметра",
            "className": "vertical",
            "style": {
                "overflow": "hidden",
                "width": "800px"
            },
            "$": {
                "@form": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "4px",
                        "flexGrow": 1,
                        "overflowY": "auto"
                    },
                    "$": {
                        "condition": {
                            "label": "Условие",
                            "control": "TextEdit",
                            "controlProps": {
                                "multiline": true,
                                "minRows": 3,
                                "inputProps": {
                                    "spellCheck": false
                                }
                            }
                        },
                        "decision": {
                            "label": "Решение",
                            "control": "TextEdit",
                            "controlProps": {
                                "multiline": true,
                                "minRows": 3,
                                "inputProps": {
                                    "spellCheck": false
                                }
                            }
                        },
                        "comment": {
                            "label": "Коментарий",
                            "control": "TextEdit",
                            "controlProps": {
                                "multiline": true,
                                "minRows": 3
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "end"
                    },
                    "$": {
                        ".btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "color": "primary"
                            },
                            "action": {
                                "js": "actions.close();",
                                "disableUpdate": true
                            }
                        },
                        ".btnAppy": {
                            "label": "Сохранить",
                            "control": "Button",
                            "controlProps": {
                                "color": "primary",
                                "variant": "contained"
                            },
                            "action": [
                                {
                                    "js": "if (!validate()) throw 'Abort';"
                                },
                                {
                                    "name": "onSaveCondition",
                                    "params": {
                                        "condition$": "mem"
                                    }
                                },
                                {
                                    "js": "actions.close();",
                                    "disableUpdate": true
                                }
                            ]
                        }
                    }
                }
            }
        },
        "conditionsForm": {
            "className": "vertical",
            "title": "Условия",
            "$": {
                "@conditions": {
                    "title": "Условия",
                    "className": "vertical",
                    "$": {
                        "data": {
                            "$": {
                                ".ap": {
                                    "control": "ActionPanel",
                                    "controlOpts": {
                                        "actions": [
                                            {
                                                "title": "Открыть",
                                                "icon": "view",
                                                "mini": true,
                                                "action": {
                                                    "js": "frontend.dialog({object: 'rule', form: 'editConditionDialog', mem: {...context.selectedCondition}})"
                                                },
                                                "disabled$": "!context.selectedCondition"
                                            },
                                            {
                                                "title": "Добавить",
                                                "icon": "add",
                                                "mini": true,
                                                "action": {
                                                    "js": "context.selectedCondition = null; frontend.dialog({object: 'rule', form: 'editConditionDialog', mem: {}})"
                                                }
                                            },
                                            {
                                                "title": "Удалить",
                                                "icon": "delete",
                                                "mini": true,
                                                "action": {
                                                    "name": "deleteCondition",
                                                    "confirm": {
                                                        "title": "Удаление",
                                                        "message$": "`Удалить условие?`",
                                                        "yes": "Да",
                                                        "no": "Нет"
                                                    }
                                                },
                                                "disabled$": "!context.selectedCondition"
                                            }
                                        ]
                                    }
                                },
                                "|conditions": {
                                    "control": "ListTable",
                                    "controlOpts": {
                                        "compact": true,
                                        "rowDrag": true,
                                        "columns!": {
                                            "condition": {
                                                "label": "Условие",
                                                "width": 450
                                            },
                                            "decision": {
                                                "label": "Результат",
                                                "flex": 1
                                            }
                                        }
                                    },
                                    "actions": {
                                        "onRowDoubleClicked": {
                                            "js": "frontend.dialog({object: 'rule', form: 'editConditionDialog', mem: {...context.selectedCondition}})"
                                        },
                                        "onChange": {
                                            "name": "onModified"
                                        }
                                    }
                                }
                            },
                            "actions": {
                                "onSaveCondition": [
                                    {
                                        "js": "if(!context.selectedCondition){mem.conditions.splice(mem.conditions.length, 0, params.condition);}else{mem.conditions.splice(mem.conditions.indexOf(context.selectedCondition), 1, params.condition); context.selectedCondition=params.condition;} mem.conditions=[...mem.conditions];"
                                    },
                                    {
                                        "name": "onModified"
                                    }
                                ],
                                "deleteCondition": [
                                    {
                                        "js": "mem.conditions.splice(mem.conditions.indexOf(context.selectedCondition), 1); mem.conditions=[...mem.conditions]; context.selectedCondition = null;"
                                    },
                                    {
                                        "name": "onModified"
                                    }
                                ],
                                "onSelectionChanged": {
                                    "js": "context.selectedCondition = selectedRow;"
                                }
                            }
                        }
                    }
                }
            }
        },
        "commonForm": {
            "className": "vertical",
            "$": {
                "code": {
                    "label": "Код правила",
                    "style": {
                        "width": "280px"
                    },
                    "control": "TextEdit",
                    "actions": {
                        "onChange": {
                            "name": "onModified"
                        }
                    },
                    "required": true
                },
                "name": {
                    "label": "Наименование правила",
                    "style": {
                        "width": "640px"
                    },
                    "control": "TextEdit",
                    "actions": {
                        "onChange": {
                            "name": "onModified"
                        }
                    },
                    "required": true
                }
            }
        },
        "testsForm": {
            "$": {
                "@tests": {
                    "title": "Тесты",
                    "$": {
                        "data": {
                            "$": {
                                ".ap": {
                                    "control": "ActionPanel",
                                    "controlOpts": {
                                        "actions": [
                                            {
                                                "title": "Открыть",
                                                "icon": "view",
                                                "mini": true,
                                                "action": {
                                                    "js": "frontend.dialog({object: 'rule', form: 'editTestDialog', mem: {...context.selectedTest}})"
                                                },
                                                "disabled$": "!context.selectedTest"
                                            },
                                            {
                                                "title": "Добавить",
                                                "icon": "add",
                                                "mini": true,
                                                "action": {
                                                    "js": "context.selectedTest = null; frontend.dialog({object: 'rule', form: 'editTestDialog', mem: {}})"
                                                }
                                            },
                                            {
                                                "title": "Удалить",
                                                "icon": "delete",
                                                "mini": true,
                                                "action": {
                                                    "name": "deleteTest",
                                                    "confirm": {
                                                        "title": "Удаление",
                                                        "message$": "`Удалить тест ${context.selectedTest.name}?`",
                                                        "yes": "Да",
                                                        "no": "Нет"
                                                    }
                                                },
                                                "disabled$": "!context.selectedTest"
                                            },
                                            {
                                                "title": "Выполнить",
                                                "action": {
                                                    "name": "onExecTest",
                                                    "params": {
                                                        "test$": "context.selectedTest"
                                                    }
                                                },
                                                "disabled$": "!context.selectedTest"
                                            }
                                        ]
                                    }
                                },
                                "|tests": {
                                    "control": "ListTable",
                                    "controlOpts": {
                                        "compact": true,
                                        "rowDrag": true,
                                        "columns!": {
                                            "name": {
                                                "label": "Наименование",
                                                "width": 450
                                            }
                                        }
                                    },
                                    "controlProps": {
                                        "context$": "(()=>{if(!context.testsContext){context.testsContext={};}return context.testsContext})()"
                                    },
                                    "actions": {
                                        "onRowDoubleClicked": {
                                            "js": "frontend.dialog({object: 'rule', form: 'editTestDialog', mem: {...context.selectedTest}})"
                                        },
                                        "onChange": {
                                            "name": "onModified"
                                        }
                                    }
                                }
                            },
                            "actions": {
                                "onSaveTest": [
                                    {
                                        "js": "if(!context.selectedTest){mem.tests.splice(mem.tests.length, 0, params.test);}else{mem.tests.splice(mem.tests.indexOf(context.selectedTest), 1, params.test); context.selectedTest=params.test;} mem.tests=[...mem.tests];"
                                    },
                                    {
                                        "name": "onModified"
                                    }
                                ],
                                "deleteCondition": [
                                    {
                                        "js": "mem.tests.splice(mem.tests.indexOf(context.selectedTest), 1); mem.tests=[...mem.tests]; context.selectedTest = null;"
                                    },
                                    {
                                        "name": "onModified"
                                    }
                                ],
                                "onSelectionChanged": {
                                    "js": "context.selectedTest = selectedRow;"
                                }
                            }
                        }
                    }
                }
            },
            "actions": {
                "onExecTest": {
                    "js": "backend.post('/aoa/execObjectMethod', {object: 'rule', method: 'evalRule', params: {rule: mem.code, ctx: params.test.context}}).then((r)=>{frontend.displayInfo('Результат\\n'+JSON.stringify(!!r?r:'Нет решения', null, 4))})"
                }
            }
        },
        "editTestDialog": {
            "title": "Редактирование теста",
            "className": "vertical",
            "style": {
                "overflow": "hidden",
                "width": "800px"
            },
            "$": {
                "@form": {
                    "className": "vertical",
                    "style": {
                        "paddingTop": "4px",
                        "flexGrow": 1,
                        "overflowY": "auto"
                    },
                    "$": {
                        "name": {
                            "label": "Наименование",
                            "control": "TextEdit"
                        },
                        "comment": {
                            "label": "Коментарий",
                            "control": "TextEdit",
                            "controlProps": {
                                "multiline": true,
                                "minRows": 3
                            }
                        },
                        "@context": {
                            "title": "Контекст",
                            "$": {
                                "context": {
                                    "label": "Входной объект",
                                    "style": {
                                        "height": "100%",
                                        "overflow": "hidden",
                                        "minHeight": "200px"
                                    },
                                    "control": "AceEditor",
                                    "controlProps": {
                                        "editorId": "editTestText",
                                        "mode": "json"
                                    },
                                    "actions": {
                                        "onChange": {
                                            "name": "onModified"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "@buttons": {
                    "className": "horizontal",
                    "style": {
                        "justifyContent": "end"
                    },
                    "$": {
                        ".btnCancel": {
                            "label": "Отменить",
                            "control": "Button",
                            "controlProps": {
                                "color": "primary"
                            },
                            "action": {
                                "js": "actions.close();",
                                "disableUpdate": true
                            }
                        },
                        ".btnAppy": {
                            "label": "Сохранить",
                            "control": "Button",
                            "controlProps": {
                                "color": "primary",
                                "variant": "contained"
                            },
                            "action": [
                                {
                                    "js": "if (!validate()) throw 'Abort';"
                                },
                                {
                                    "name": "onSaveTest",
                                    "params": {
                                        "test$": "mem"
                                    }
                                },
                                {
                                    "js": "actions.close();",
                                    "disableUpdate": true
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "methods": {
        "getRuleList": {
            "sql": {},
            "script": {
                "py": "from apng_core.rule.models import Rule\nfrom apng_core.aoa.services import applyFilterModel, applyFilterModel2\n\nquery = Rule.objects\n\nif parameters.get('id'):\n    query = query.filter(id=parameters['id'])\nif parameters.get('code'):\n    query = query.filter(code=parameters['code'])\nelse:\n    request = parameters.get('request')\n    filterModel = request.get('filterModel') if request else None\n    filterModel2 = request.get('filterModel2') if request else None\n        \n    if filterModel or filterModel2:\n        if filterModel:\n            query = applyFilterModel(query, filterModel)\n        if filterModel2:\n            query = applyFilterModel2(query, filterModel2)\n    else:\n        query = query.all()\n    \n    query = query.order_by('code')\n    \n    if request:\n        query = query[request['startRow']:request['endRow']]\n        \ndata = []\nfor r in query:\n    d = {\n        'id': r.id.__str__(),\n        'code': r.code,\n        'name': r.name,\n    }\n    data.append(d)\n"
            }
        },
        "getRule": {
            "script": {
                "py": "from apng_core.rule.models import Rule\n\nif parameters.get('id'):\n    r = Rule.objects.get(id=parameters['id'])\nelse:\n    try:\n        r = Rule.objects.get(code=parameters.get('code'))\n    except Rule.DoesNotExist as e:\n        raise UserException('Правило %s не существует' % parameters.get('code'))\n\n\ndata = {\n    'id': r.id.__str__(),\n    'code': r.code,\n    'name': r.name,\n    'data': r.data,\n}\n"
            },
            "sql": {}
        },
        "saveRule": {
            "script": {
                "py": "from apng_core.rule.models import Rule\n\n\ntry:\n    rule = None\n    if parameters.get('id'):\n        try:\n            rule = Rule.objects.get(id=parameters['id'])\n        except Rule.DoesNotExist:\n            pass\n\n    if rule is None:\n        try:\n            rule = Rule.objects.get(code=parameters['code'])\n        except Rule.DoesNotExist:\n            pass\n            \n    if rule is None:\n        rule = Rule()\n    \n\n    rule.code = parameters['code']\n    rule.name = parameters['name']\n    rule.data = parameters.get('data')\n    \n    rule.save()\n    \n    data = {\n        'id': rule.id.__str__()\n    }\nexcept Exception as e:\n    raise UserException({\n        'message': 'Ошибка сохранения правила\\n%s' % e,\n        'trace': traceback.format_exc(),\n    })\n\n"
            },
            "sql": {}
        },
        "delete": {
            "script": {
                "py": "from apng_core.rule.models import Rule\n\nif parameters.get('id'):\n    Rule.objects.get(id=parameters['id']).delete()\nelse:\n    Rule.objects.get(code=parameters['code']).delete()"
            }
        },
        "evalRule": {
            "script": {
                "py": "#\n# Вычисление правила\n#\n# Входные параметрв\n#   rule - код правила\n#   ctx - контекст\n\nrule = execObjectMethod({\n    'object': 'rule', 'method': 'getRule',\n    'params': {'code': parameters['rule']}\n})\n\ncontext = parameters['ctx']\nif isinstance(context, str):\n    context = json.loads(context)\n\nctx = {\n    **globals(),\n    'ctx': context\n}\n\nresults = []\n\n#\n# Вычисление условий\n#\nfor c in rule['data']['conditions']:\n    try:\n        r = eval(c['condition'], ctx)\n        if r:\n            v = eval(c['decision'], ctx)\n            results.append({\n                'decision': v,\n                'comment': c.get('comment')\n            })\n            if not parameters.get('all', False):\n                break\n    except Exception as e:\n        raise UserException({\n            'message': 'Ошибка вычисления условия для правила %s\\n%s' % (rule['code'], c['condition'])\n        }).withError(e)\n        \nif len(results) == 0:\n    data = None\nelif not parameters.get('all', False):\n    data =  results[0]\nelse:\n    data = results\n    \n#raise UserException(json.dumps(results, indent=4, ensure_ascii=False))\n"
            },
            "sql": {}
        }
    },
    "references": {},
    "js": {}
}